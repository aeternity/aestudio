{"version":3,"file":"polyfills.d9a8aac4ffa0fcd9.js","mappings":"iHA6EMA,aAvBLC,OAAeC,OAASD,OAGxBA,OAAeE,QAAU,CACxBC,IAAK,CAAEC,WAAOC,GACdC,QAAS,WAIVC,OAAOC,UAAkBC,OAAS,WACjC,OAAOC,KAAKC,UACd,EAMCX,OAAeE,QAAU,CACxBC,IAAK,CAAEC,WAAOC,GACdC,QAAS,WAGVN,OAAeY,aACVb,GAAec,QACZ,SAAUC,GAASC,IACxB,IAAIC,GAAWD,KAAe,GACd,IAAZD,IACDD,QAAkB,GACnBA,QAAQI,IAAM,WAAa,EACvBD,IACFH,QAAQK,KAAO,WAAa,EAC5BL,QAAQM,KAAO,WAAa,EAC5BN,QAAQO,MAAQ,WAAa,IAE7BP,QAAQK,KAAOnB,GAAamB,KAC5BL,QAAQM,KAAOpB,GAAaoB,KAC5BN,QAAQO,MAAQrB,GAAaqB,QAG/BP,QAAUd,EAEd,GAKFC,OAAOY,aAAY,GAAO,gBC9F1B,SAAYX,GACR,MAAMoB,EAAcpB,EAAOoB,YAC3B,SAASC,EAAKC,GACVF,GAAeA,EAAYC,MAAWD,EAAYC,KAAQC,EAC9D,CACA,SAASC,EAAmBD,EAAME,GAC9BJ,GAAeA,EAAYK,SAAcL,EAAYK,QAAWH,EAAME,EAC1E,CACAH,EAAK,QAIL,MAAMK,EAAe1B,EAAO2B,sBAA2B,kBACvD,SAASC,EAAWN,GAChB,OAAOI,EAAeJ,CAC1B,CACA,MAAMO,GAAmE,IAAlD7B,EAAO4B,EAAW,4BACzC,GAAI5B,EAAO8B,KAAS,CAUhB,GAAID,GAAuD,mBAA9B7B,EAAO8B,KAAQF,WACxC,MAAM,IAAIG,MAAM,wBAGhB,OAAO/B,EAAO8B,IAEtB,CAAC,IACKA,EAAI,MAAV,MAAMA,EACFE,SACSvB,KAAKmB,WAAaA,EAC3B,wBAAOK,GACH,GAAIjC,EAAOkC,UAAeC,GAAQC,iBAC9B,MAAM,IAAIL,MAAM,gSAMxB,CACA,eAAWM,GACP,IAAIC,EAAOR,EAAKS,QAChB,KAAOD,EAAKE,QACRF,EAAOA,EAAKE,OAEhB,OAAOF,CACX,CACA,kBAAWC,GACP,OAAOE,EAAkBH,IAC7B,CACA,sBAAWI,GACP,OAAOC,EACX,CAEA,mBAAOC,CAAatB,EAAMuB,EAAIC,GAAkB,GAC5C,GAAIX,GAAQY,eAAezB,IAIvB,IAAKwB,GAAmBjB,EACpB,MAAME,MAAM,yBAA2BT,QAAI,IAGzCtB,EAAO,kBAAoBsB,GAAO,CACxC,MAAM0B,EAAW,QAAU1B,EAC3BD,EAAK2B,GACLb,GAAQb,GAAQuB,EAAG7C,EAAQ8B,EAAMmB,GACjC1B,EAAmByB,EAAUA,EACjC,CACJ,CACA,UAAIR,GACA,OAAO/B,KAAKyC,OAChB,CACA,QAAI5B,GACA,OAAOb,KAAK0C,KAChB,CACAC,YAAYZ,EAAQa,GAChB5C,KAAKyC,QAAUV,EACf/B,KAAK0C,MAAQE,EAAWA,EAAS/B,MAAQ,UAAY,SACrDb,KAAK6C,YAAcD,GAAYA,EAASE,YAAc,CAAC,EACvD9C,KAAK+C,cACD,IAAIC,EAAchD,KAAMA,KAAKyC,SAAWzC,KAAKyC,QAAQM,cAAeH,EAC5E,CACAK,IAAIC,GACA,MAAMrB,EAAO7B,KAAKmD,YAAYD,GAC9B,GAAIrB,EACA,OAAOA,EAAKgB,YAAYK,EAChC,CACAC,YAAYD,GACR,IAAIpB,EAAU9B,KACd,KAAO8B,GAAS,CACZ,GAAIA,EAAQe,YAAYP,eAAeY,GACnC,OAAOpB,EAEXA,EAAUA,EAAQW,OACtB,CACA,OAAO,IACX,CACAW,KAAKR,GACD,IAAKA,EACD,MAAM,IAAItB,MAAM,sBACpB,OAAOtB,KAAK+C,cAAcK,KAAKpD,KAAM4C,EACzC,CACAS,KAAKC,EAAUC,GACX,GAAwB,mBAAbD,EACP,MAAM,IAAIhC,MAAM,2BAA6BgC,GAEjD,MAAME,EAAYxD,KAAK+C,cAAcU,UAAUzD,KAAMsD,EAAUC,GACzD1B,EAAO7B,KACb,OAAO,WACH,OAAO6B,EAAK6B,WAAWF,EAAWxD,KAAM2D,UAAWJ,EACvD,CACJ,CACAK,IAAIN,EAAUO,EAAWC,EAAWP,GAChCvB,EAAoB,CAAED,OAAQC,EAAmBH,KAAM7B,MACvD,IACI,OAAOA,KAAK+C,cAAcgB,OAAO/D,KAAMsD,EAAUO,EAAWC,EAAWP,EAC3E,SAEIvB,EAAoBA,EAAkBD,MAC1C,CACJ,CACA2B,WAAWJ,EAAUO,EAAY,KAAMC,EAAWP,GAC9CvB,EAAoB,CAAED,OAAQC,EAAmBH,KAAM7B,MACvD,IACI,IACI,OAAOA,KAAK+C,cAAcgB,OAAO/D,KAAMsD,EAAUO,EAAWC,EAAWP,EAC3E,OACO7C,GACH,GAAIV,KAAK+C,cAAciB,YAAYhE,KAAMU,GACrC,MAAMA,CAEd,CACJ,SAEIsB,EAAoBA,EAAkBD,MAC1C,CACJ,CACAkC,QAAQC,EAAML,EAAWC,GACrB,GAAII,EAAKrC,MAAQ7B,KACb,MAAM,IAAIsB,MAAM,+DACX4C,EAAKrC,MAAQsC,GAAStD,KAAO,gBAAkBb,KAAKa,KAAO,KAKpE,GAAIqD,EAAKE,QAAUC,IAAiBH,EAAKI,OAASC,GAAaL,EAAKI,OAASE,GACzE,OAEJ,MAAMC,EAAeP,EAAKE,OAASM,EACnCD,GAAgBP,EAAKS,cAAcD,EAASE,GAC5CV,EAAKW,WACL,MAAMC,EAAe5C,GACrBA,GAAegC,EACflC,EAAoB,CAAED,OAAQC,EAAmBH,KAAM7B,MACvD,IACQkE,EAAKI,MAAQE,GAAaN,EAAKa,OAASb,EAAKa,KAAKC,aAClDd,EAAKe,cAAWtF,GAEpB,IACI,OAAOK,KAAK+C,cAAcmC,WAAWlF,KAAMkE,EAAML,EAAWC,EAChE,OACOpD,GACH,GAAIV,KAAK+C,cAAciB,YAAYhE,KAAMU,GACrC,MAAMA,CAEd,CACJ,SAIQwD,EAAKE,QAAUC,GAAgBH,EAAKE,QAAUe,IAC1CjB,EAAKI,MAAQC,GAAcL,EAAKa,MAAQb,EAAKa,KAAKC,WAClDP,GAAgBP,EAAKS,cAAcC,EAAWF,IAG9CR,EAAKW,SAAW,EAChB7E,KAAKoF,iBAAiBlB,GAAM,GAC5BO,GACIP,EAAKS,cAAcN,EAAcK,EAASL,KAGtDrC,EAAoBA,EAAkBD,OACtCG,GAAe4C,CACnB,CACJ,CACAO,aAAanB,GACT,GAAIA,EAAKrC,MAAQqC,EAAKrC,OAAS7B,KAAM,CAGjC,IAAIsF,EAAUtF,KACd,KAAOsF,GAAS,CACZ,GAAIA,IAAYpB,EAAKrC,KACjB,MAAMP,MAAO,8BAA6BtB,KAAKa,kDAAkDqD,EAAKrC,KAAKhB,QAE/GyE,EAAUA,EAAQvD,MACtB,CACJ,CACAmC,EAAKS,cAAcY,EAAYlB,GAC/B,MAAMmB,EAAgB,GACtBtB,EAAKuB,eAAiBD,EACtBtB,EAAKwB,MAAQ1F,KACb,IACIkE,EAAOlE,KAAK+C,cAAcsC,aAAarF,KAAMkE,EACjD,OACOyB,GAGHzB,QAAKS,cAAcQ,EAASI,EAAYlB,GAExCrE,KAAK+C,cAAciB,YAAYhE,KAAM2F,GAC/BA,CACV,CACA,OAAIzB,EAAKuB,iBAAmBD,GAExBxF,KAAKoF,iBAAiBlB,EAAM,GAE5BA,EAAKE,OAASmB,GACdrB,EAAKS,cAAcC,EAAWW,GAE3BrB,CACX,CACA0B,kBAAkBrC,EAAQD,EAAUyB,EAAMc,GACtC,OAAO7F,KAAKqF,aAAa,IAAIS,EAASC,EAAWxC,EAAQD,EAAUyB,EAAMc,OAAgBlG,GAC7F,CACAqG,kBAAkBzC,EAAQD,EAAUyB,EAAMc,EAAgBI,GACtD,OAAOjG,KAAKqF,aAAa,IAAIS,EAAStB,EAAWjB,EAAQD,EAAUyB,EAAMc,EAAgBI,GAC7F,CACAC,kBAAkB3C,EAAQD,EAAUyB,EAAMc,EAAgBI,GACtD,OAAOjG,KAAKqF,aAAa,IAAIS,EAASvB,EAAWhB,EAAQD,EAAUyB,EAAMc,EAAgBI,GAC7F,CACAE,WAAWjC,GACP,GAAIA,EAAKrC,MAAQ7B,KACb,MAAM,IAAIsB,MAAM,qEACX4C,EAAKrC,MAAQsC,GAAStD,KAAO,gBAAkBb,KAAKa,KAAO,KACpE,GAAIqD,EAAKE,QAAUQ,GAAaV,EAAKE,QAAUM,EAG/CR,GAAKS,cAAcyB,EAAWxB,EAAWF,GACzC,IACI1E,KAAK+C,cAAcoD,WAAWnG,KAAMkE,EACxC,OACOyB,GAEHzB,QAAKS,cAAcQ,EAASiB,GAC5BpG,KAAK+C,cAAciB,YAAYhE,KAAM2F,GAC/BA,CACV,CACA,OAAA3F,KAAKoF,iBAAiBlB,GAAM,GAC5BA,EAAKS,cAAcN,EAAc+B,GACjClC,EAAKW,SAAW,EACTX,EACX,CACAkB,iBAAiBlB,EAAMmC,GACnB,MAAMb,EAAgBtB,EAAKuB,gBACd,GAATY,IACAnC,EAAKuB,eAAiB,MAE1B,QAASa,EAAI,EAAGA,EAAId,EAAce,OAAQD,IACtCd,EAAcc,GAAGlB,iBAAiBlB,EAAKI,KAAM+B,EAErD,EACH,OA1OKhF,CAAI,KA2OV,MAAMmF,EAAc,CAChB3F,KAAM,GACN4F,UAAWA,CAACC,EAAUC,EAAGC,EAAQC,IAAiBH,EAASI,QAAQF,EAAQC,GAC3EE,eAAgBA,CAACL,EAAUC,EAAGC,EAAQ1C,IAASwC,EAASrB,aAAauB,EAAQ1C,GAC7E8C,aAAcA,CAACN,EAAUC,EAAGC,EAAQ1C,EAAML,EAAWC,IAAc4C,EAASxB,WAAW0B,EAAQ1C,EAAML,EAAWC,GAChHmD,aAAcA,CAACP,EAAUC,EAAGC,EAAQ1C,IAASwC,EAASP,WAAWS,EAAQ1C,IAE7E,MAAMlB,EACFL,YAAYd,EAAMqF,EAAgBtE,GAC9B5C,KAAKmH,YAAc,CAAEpB,UAAa,EAAGvB,UAAa,EAAGD,UAAa,GAClEvE,KAAK6B,KAAOA,EACZ7B,KAAKoH,gBAAkBF,EACvBlH,KAAKqH,QAAUzE,IAAaA,GAAYA,EAAS0E,OAAS1E,EAAWsE,EAAeG,SACpFrH,KAAKuH,UAAY3E,IAAaA,EAAS0E,OAASJ,EAAiBA,EAAeK,WAChFvH,KAAKwH,cACD5E,IAAaA,EAAS0E,OAAStH,KAAK6B,KAAOqF,EAAeM,eAC9DxH,KAAKyH,aACD7E,IAAaA,EAAS8E,YAAc9E,EAAWsE,EAAeO,cAClEzH,KAAK2H,eACD/E,IAAaA,EAAS8E,YAAcR,EAAiBA,EAAeS,gBACxE3H,KAAK4H,mBACDhF,IAAaA,EAAS8E,YAAc1H,KAAK6B,KAAOqF,EAAeU,oBACnE5H,KAAK6H,UAAYjF,IAAaA,EAASkF,SAAWlF,EAAWsE,EAAeW,WAC5E7H,KAAK+H,YACDnF,IAAaA,EAASkF,SAAWZ,EAAiBA,EAAea,aACrE/H,KAAKgI,gBACDpF,IAAaA,EAASkF,SAAW9H,KAAK6B,KAAOqF,EAAec,iBAChEhI,KAAKiI,eACDrF,IAAaA,EAASsF,cAAgBtF,EAAWsE,EAAee,gBACpEjI,KAAKmI,iBACDvF,IAAaA,EAASsF,cAAgBhB,EAAiBA,EAAeiB,kBAC1EnI,KAAKoI,qBACDxF,IAAaA,EAASsF,cAAgBlI,KAAK6B,KAAOqF,EAAekB,sBACrEpI,KAAKqI,gBACDzF,IAAaA,EAASmE,eAAiBnE,EAAWsE,EAAemB,iBACrErI,KAAKsI,kBAAoB1F,IACpBA,EAASmE,eAAiBG,EAAiBA,EAAeoB,mBAC/DtI,KAAKuI,sBACD3F,IAAaA,EAASmE,eAAiB/G,KAAK6B,KAAOqF,EAAeqB,uBACtEvI,KAAKwI,cACD5F,IAAaA,EAASoE,aAAepE,EAAWsE,EAAesB,eACnExI,KAAKyI,gBACD7F,IAAaA,EAASoE,aAAeE,EAAiBA,EAAeuB,iBACzEzI,KAAK0I,oBACD9F,IAAaA,EAASoE,aAAehH,KAAK6B,KAAOqF,EAAewB,qBACpE1I,KAAK2I,cACD/F,IAAaA,EAASqE,aAAerE,EAAWsE,EAAeyB,eACnE3I,KAAK4I,gBACDhG,IAAaA,EAASqE,aAAeC,EAAiBA,EAAe0B,iBACzE5I,KAAK6I,oBACDjG,IAAaA,EAASqE,aAAejH,KAAK6B,KAAOqF,EAAe2B,qBACpE7I,KAAK8I,WAAa,KAClB9I,KAAK+I,aAAe,KACpB/I,KAAKgJ,kBAAoB,KACzBhJ,KAAKiJ,iBAAmB,KACxB,MAAMC,EAAkBtG,GAAYA,EAAS6D,WAEzCyC,GADkBhC,GAAkBA,EAAe4B,cAInD9I,KAAK8I,WAAaI,EAAkBtG,EAAW4D,EAC/CxG,KAAK+I,aAAe7B,EACpBlH,KAAKgJ,kBAAoBhJ,KACzBA,KAAKiJ,iBAAmBpH,EACnBe,EAASmE,iBACV/G,KAAKqI,gBAAkB7B,EACvBxG,KAAKsI,kBAAoBpB,EACzBlH,KAAKuI,sBAAwBvI,KAAK6B,MAEjCe,EAASoE,eACVhH,KAAKwI,cAAgBhC,EACrBxG,KAAKyI,gBAAkBvB,EACvBlH,KAAK0I,oBAAsB1I,KAAK6B,MAE/Be,EAASqE,eACVjH,KAAK2I,cAAgBnC,EACrBxG,KAAK4I,gBAAkB1B,EACvBlH,KAAK6I,oBAAsB7I,KAAK6B,MAG5C,CACAuB,KAAK+F,EAAYvG,GACb,OAAO5C,KAAKqH,QAAUrH,KAAKqH,QAAQC,OAAOtH,KAAKuH,UAAWvH,KAAK6B,KAAMsH,EAAYvG,GAC7E,IAAIvB,EAAK8H,EAAYvG,EAC7B,CACAa,UAAU0F,EAAY7F,EAAUC,GAC5B,OAAOvD,KAAKyH,aACRzH,KAAKyH,aAAaC,YAAY1H,KAAK2H,eAAgB3H,KAAK4H,mBAAoBuB,EAAY7F,EAAUC,GAClGD,CACR,CACAS,OAAOoF,EAAY7F,EAAUO,EAAWC,EAAWP,GAC/C,OAAOvD,KAAK6H,UAAY7H,KAAK6H,UAAUC,SAAS9H,KAAK+H,YAAa/H,KAAKgI,gBAAiBmB,EAAY7F,EAAUO,EAAWC,EAAWP,GAChID,EAAS8F,MAAMvF,EAAWC,EAClC,CACAE,YAAYmF,EAAYzI,GACpB,OAAOV,KAAKiI,gBACRjI,KAAKiI,eAAeC,cAAclI,KAAKmI,iBAAkBnI,KAAKoI,qBAAsBe,EAAYzI,EAExG,CACA2E,aAAa8D,EAAYjF,GACrB,IAAImF,EAAanF,EACjB,GAAIlE,KAAKqI,gBACDrI,KAAK8I,YACLO,EAAW5D,eAAe6D,KAAKtJ,KAAKgJ,mBAGxCK,EAAarJ,KAAKqI,gBAAgBtB,eAAe/G,KAAKsI,kBAAmBtI,KAAKuI,sBAAuBY,EAAYjF,GAE5GmF,IACDA,EAAanF,WAGbA,EAAKqF,WACLrF,EAAKqF,WAAWrF,OAAI,IAEfA,EAAKI,MAAQyB,EAIlB,MAAM,IAAIzE,MAAM,+BAHhBsE,EAAkB1B,EAG2B,CAGrD,OAAOmF,CACX,CACAnE,WAAWiE,EAAYjF,EAAML,EAAWC,GACpC,OAAO9D,KAAKwI,cAAgBxI,KAAKwI,cAAcxB,aAAahH,KAAKyI,gBAAiBzI,KAAK0I,oBAAqBS,EAAYjF,EAAML,EAAWC,GACrII,EAAKZ,SAAS8F,MAAMvF,EAAWC,EACvC,CACAqC,WAAWgD,EAAYjF,GACnB,IAAIsF,EACJ,GAAIxJ,KAAK2I,cACLa,EAAQxJ,KAAK2I,cAAc1B,aAAajH,KAAK4I,gBAAiB5I,KAAK6I,oBAAqBM,EAAYjF,OAEnG,CACD,IAAKA,EAAKe,SACN,MAAM3D,MAAM,0BAEhBkI,EAAQtF,EAAKe,SAASf,EAC1B,CACA,OAAOsF,CACX,CACA1C,QAAQqC,EAAYM,GAGhB,IACIzJ,KAAK8I,YACD9I,KAAK8I,WAAWrC,UAAUzG,KAAK+I,aAAc/I,KAAKiJ,iBAAkBE,EAAYM,EACxF,OACO9D,GACH3F,KAAKgE,YAAYmF,EAAYxD,EACjC,CACJ,CAEAP,iBAAiBd,EAAM+B,GACnB,MAAMqD,EAAS1J,KAAKmH,YACdwC,EAAOD,EAAOpF,GACdsF,EAAOF,EAAOpF,GAAQqF,EAAOtD,EACnC,GAAIuD,EAAO,EACP,MAAM,IAAItI,MAAM,4CAER,GAARqI,GAAqB,GAARC,GAOb5J,KAAK8G,QAAQ9G,KAAK6B,KANF,CACZkE,UAAW2D,EAAO3D,UAAe,EACjCvB,UAAWkF,EAAOlF,UAAe,EACjCD,UAAWmF,EAAOnF,UAAe,EACjCsF,OAAQvF,GAIpB,EAEJ,MAAMwB,EACFnD,YAAY2B,EAAMf,EAAQD,EAAUwG,EAASP,EAAYtE,GAarD,GAXAjF,KAAK0F,MAAQ,KACb1F,KAAK6E,SAAW,EAEhB7E,KAAKyF,eAAiB,KAEtBzF,KAAK+J,OAAS,eACd/J,KAAKsE,KAAOA,EACZtE,KAAKuD,OAASA,EACdvD,KAAK+E,KAAO+E,EACZ9J,KAAKuJ,WAAaA,EAClBvJ,KAAKiF,SAAWA,GACX3B,EACD,MAAM,IAAIhC,MAAM,2BAEpBtB,KAAKsD,SAAWA,EAChB,MAAM0G,EAAOhK,KAGTA,KAAK+D,OADLO,IAASC,GAAauF,GAAWA,EAAQG,KAC3BnE,EAASZ,WAGT,WACV,OAAOY,EAASZ,WAAWgF,KAAK3K,EAAQyK,EAAMhK,KAAM2D,UACxD,CAER,CACA,iBAAOuB,CAAWhB,EAAM0C,EAAQuD,GACvBjG,IACDA,EAAOlE,MAEXoK,KACA,IACIlG,SAAKW,WACEX,EAAKrC,KAAKoC,QAAQC,EAAM0C,EAAQuD,EAC3C,SAEqC,GAA7BC,IACAC,IAEJD,IACJ,CACJ,CACA,QAAIvI,GACA,OAAO7B,KAAK0F,KAChB,CACA,SAAItB,GACA,OAAOpE,KAAK+J,MAChB,CACAO,wBACItK,KAAK2E,cAAcN,EAAckB,EACrC,CAEAZ,cAAc4F,EAASC,EAAYC,GAC/B,GAAIzK,KAAK+J,SAAWS,GAAcxK,KAAK+J,SAAWU,EAO9C,MAAM,IAAInJ,MAAO,GAAEtB,KAAKsE,SAAStE,KAAKuD,mCAAmCgH,wBAA8BC,KAAcC,EAAa,QAAWA,EAAa,IAAO,YAAYzK,KAAK+J,YANlL/J,KAAK+J,OAASQ,EACVA,GAAWlG,IACXrE,KAAKyF,eAAiB,KAMlC,CACAxF,WACI,OAAID,KAAK+E,aAAe/E,KAAK+E,KAAK2F,SAAa,IACpC1K,KAAK+E,KAAK2F,SAASzK,WAGnB0K,OAAO7K,UAAUG,SAASiK,KAAKlK,KAE9C,CAGAD,SACI,MAAO,CACHuE,KAAMtE,KAAKsE,KACXF,MAAOpE,KAAKoE,MACZb,OAAQvD,KAAKuD,OACb1B,KAAM7B,KAAK6B,KAAKhB,KAChBgE,SAAU7E,KAAK6E,SAEvB,EAOJ,MAAM+F,EAAmBzJ,EAAW,cAC9B0J,EAAgB1J,EAAW,WAC3B2J,EAAa3J,EAAW,QAC9B,IAEI4J,EAFAC,EAAkB,GAClBC,GAA4B,EAEhC,SAASC,EAAwBC,GAM7B,GALKJ,GACGxL,EAAOsL,KACPE,EAA8BxL,EAAOsL,GAAeO,QAAQ,IAGhEL,EAA6B,CAC7B,IAAIM,EAAaN,EAA4BD,GACxCO,IAGDA,EAAaN,EAA4BO,MAE7CD,EAAWnB,KAAKa,EAA6BI,EACjD,MAEI5L,EAAOqL,GAAkBO,EAAM,EAEvC,CACA,SAASvF,EAAkB1B,GAGW,IAA9BkG,IAA8D,IAA3BY,EAAgBzE,QAEnD2E,EAAwBb,GAE5BnG,GAAQ8G,EAAgB1B,KAAKpF,EACjC,CACA,SAASmG,IACL,IAAKY,EAA2B,CAE5B,IADAA,GAA4B,EACrBD,EAAgBzE,QAAQ,CAC3B,MAAMgF,EAAQP,EACdA,EAAkB,GAClB,QAAS1E,EAAI,EAAGA,EAAIiF,EAAMhF,OAAQD,IAAK,CACnC,MAAMpC,EAAOqH,EAAMjF,GACnB,IACIpC,EAAKrC,KAAKoC,QAAQC,EAAM,KAAM,KAClC,OACOxD,GACH8B,EAAKgJ,iBAAiB9K,EAC1B,CACJ,CACJ,CACA8B,EAAKiJ,qBACLR,GAA4B,CAChC,CACJ,CAMA,MAAM9G,EAAU,CAAEtD,KAAM,WAClBwD,EAAe,eAAgBkB,EAAa,aAAcX,EAAY,YAAaF,EAAU,UAAW0B,EAAY,YAAajB,EAAU,UAC3IY,EAAY,YAAavB,EAAY,YAAaD,EAAY,YAC9D7C,GAAU,CAAC,EACXc,EAAO,CACTkJ,OAAQvK,EACRwK,iBAAkBA,IAAM3J,EACxBwJ,iBAAkBI,EAClBH,mBAAoBG,EACpBhG,kBAAmBA,EACnBiG,kBAAmBA,KAAOxK,EAAKF,EAAW,oCAC1C2K,iBAAkBA,IAAM,GACxBC,kBAAmBH,EACnBI,YAAaA,IAAMJ,EACnBK,cAAeA,IAAM,GACrBC,UAAWA,IAAMN,EACjBO,eAAgBA,IAAMP,EACtBQ,oBAAqBA,IAAMR,EAC3BS,WAAYA,KAAM,EAClBC,iBAAkBA,OAClBC,qBAAsBA,IAAMX,EAC5BY,+BAAgCA,OAChCC,aAAcA,OACdC,WAAYA,IAAM,GAClBC,WAAYA,IAAMf,EAClBgB,oBAAqBA,IAAMhB,EAC3BiB,iBAAkBA,IAAM,GACxBC,sBAAuBA,IAAMlB,EAC7BmB,kBAAmBA,IAAMnB,EACzBoB,eAAgBA,IAAMpB,EACtBV,wBAAyBA,GAE7B,IAAIlJ,EAAoB,CAAED,OAAQ,KAAMF,KAAM,IAAIR,EAAK,KAAM,OACzDa,GAAe,KACfkI,GAA4B,EAChC,SAASwB,IAAS,CAClB9K,EAAmB,OAAQ,QACpBvB,EAAO8B,KAAUA,CAC5B,CApnBA,QAonBW/B,OAAW,KAAeA,eAAiB0K,KAAS,KAAeA,MAAQzK,QAUtF,MAAMiN,GAAiC7B,OAAOsC,yBAExCV,GAAuB5B,OAAOuC,eAE9BC,GAAuBxC,OAAOyC,eAE9BX,GAAe9B,OAAO0C,OAEtBX,GAAaY,MAAMxN,UAAUyN,MAE7BC,GAAyB,mBAEzBC,GAA4B,sBAE5BC,GAAiCrM,KAAKF,WAAWqM,IAEjDG,GAAoCtM,KAAKF,WAAWsM,IAEpDG,GAAW,OAEXC,GAAY,QAEZC,GAAqBzM,KAAKF,WAAW,IAC3C,SAASyL,GAAoBtJ,EAAUC,GACnC,OAAOlC,KAAKS,QAAQuB,KAAKC,EAAUC,EACvC,CACA,SAASwK,GAAiCxK,EAAQD,EAAUyB,EAAMc,EAAgBI,GAC9E,OAAO5E,KAAKS,QAAQkE,kBAAkBzC,EAAQD,EAAUyB,EAAMc,EAAgBI,EAClF,CACA,MAAM+H,EAAa3M,KAAKF,WAClB8M,UAAwB3O,OAAW,IACnC4O,GAAiBD,GAAiB3O,YAASK,EAC3CwO,EAAUF,IAAkBC,IAAkC,iBAATlE,MAAqBA,MAAQzK,OAClF6O,GAAmB,kBACzB,SAASnC,GAAc9B,EAAM5G,GACzB,QAAS+C,EAAI6D,EAAK5D,OAAS,EAAGD,GAAK,EAAGA,IACX,mBAAZ6D,EAAK7D,KACZ6D,EAAK7D,GAAKsG,GAAoBzC,EAAK7D,GAAI/C,EAAS,IAAM+C,IAG9D,OAAO6D,CACX,CAqBA,SAASkE,GAAmBC,GACxB,OAAKA,IAGyB,IAA1BA,EAAaC,YAGoB,mBAArBD,EAAarL,YAA6BqL,EAAaE,IAAQ,IACnF,CACA,MAAMC,UAAsBC,kBAAsB,KAAe1E,gBAAgB0E,kBAG3EC,KAAY,OAAQR,WAAmBA,EAAQ3O,QAAY,KACvB,qBAAtC,CAAC,EAAES,SAASiK,KAAKiE,EAAQ3O,SACvBoP,IAAaD,KAAWF,OAAkBR,KAAkBC,GAAeW,aAI3EC,UAAeX,EAAQ3O,QAAY,KACC,qBAAtC,CAAC,EAAES,SAASiK,KAAKiE,EAAQ3O,WAAoCiP,OAC1DR,KAAkBC,GAAeW,aAClCE,GAAyB,CAAC,EAC1BC,GAAS,SAAUC,GAIrB,KADAA,EAAQA,GAASd,EAAQc,OAErB,OAEJ,IAAIC,EAAkBH,GAAuBE,EAAM3K,MAC9C4K,IACDA,EAAkBH,GAAuBE,EAAM3K,MAAQ0J,EAAW,cAAgBiB,EAAM3K,OAE5F,MAAMsC,EAAS5G,MAAQiP,EAAMrI,QAAUuH,EACjCgB,EAAWvI,EAAOsI,GACxB,IAAIE,EAkBJ,OAjBIR,IAAahI,IAAWsH,IAAiC,UAAfe,EAAM3K,MAKhD8K,EAASD,GACLA,EAASjF,KAAKlK,KAFCiP,EAEgBI,QAFhBJ,EAEoCK,SAFpCL,EAEyDM,OAFzDN,EAE4EO,MAF5EP,EAE8FvO,QAClG,IAAX0O,GACAH,EAAMQ,mBAIVL,EAASD,GAAYA,EAAS/F,MAAMpJ,KAAM2D,WAC5BhE,MAAVyP,IAAwBA,GACxBH,EAAMQ,kBAGPL,CACX,EACA,SAASM,GAAcC,EAAKC,EAAM9P,GAC9B,IAAI+P,EAAOrD,GAA+BmD,EAAKC,GAU/C,IATKC,GAAQ/P,GAEa0M,GAA+B1M,EAAW8P,KAE5DC,EAAO,CAAEC,YAAY,EAAMC,cAAc,KAK5CF,IAASA,EAAKE,aACf,OAEJ,MAAMC,EAAsBhC,EAAW,KAAO4B,EAAO,WACrD,GAAID,EAAIrN,eAAe0N,IAAwBL,EAAIK,GAC/C,cAOGH,EAAKtB,gBACLsB,EAAKrG,MACZ,MAAMyG,EAAkBJ,EAAK5M,IACvBiN,EAAkBL,EAAKrB,IAEvB2B,EAAYP,EAAKrC,MAAM,GAC7B,IAAI2B,EAAkBH,GAAuBoB,GACxCjB,IACDA,EAAkBH,GAAuBoB,GAAanC,EAAW,cAAgBmC,IAErFN,EAAKrB,IAAM,SAAU4B,GAGjB,IAAIxJ,EAAS5G,MACR4G,GAAU+I,IAAQxB,IACnBvH,EAASuH,GAERvH,IAIwB,mBADPA,EAAOsI,IAEzBtI,EAAOyJ,oBAAoBF,EAAWnB,IAI1CkB,GAAmBA,EAAgBhG,KAAKtD,EAAQ,MAChDA,EAAOsI,GAAmBkB,EACF,mBAAbA,GACPxJ,EAAO0J,iBAAiBH,EAAWnB,IAAQ,GAEnD,EAGAa,EAAK5M,IAAM,WAGP,IAAI2D,EAAS5G,KAIb,IAHK4G,GAAU+I,IAAQxB,IACnBvH,EAASuH,IAERvH,EACD,OAAO,KAEX,MAAMuI,EAAWvI,EAAOsI,GACxB,GAAIC,EACA,OAAOA,EAEN,GAAIc,EAAiB,CAOtB,IAAIzG,EAAQyG,EAAgB/F,KAAKlK,MACjC,GAAIwJ,EACAqG,SAAKrB,IAAItE,KAAKlK,KAAMwJ,GACoB,mBAA7B5C,EAAOwH,KACdxH,EAAO2J,gBAAgBX,GAEpBpG,CAEf,CACA,OAAO,IACX,EACA+C,GAAqBoD,EAAKC,EAAMC,GAChCF,EAAIK,IAAuB,CAC/B,CACA,SAASjE,GAAkB4D,EAAK7M,EAAYhD,GACxC,GAAIgD,EACA,QAASwD,EAAI,EAAGA,EAAIxD,EAAWyD,OAAQD,IACnCoJ,GAAcC,EAAK,KAAO7M,EAAWwD,GAAIxG,OAG5C,CACD,MAAM0Q,EAAe,GACrB,UAAWZ,KAAQD,EACS,MAApBC,EAAKrC,MAAM,EAAG,IACdiD,EAAalH,KAAKsG,GAG1B,QAASa,EAAI,EAAGA,EAAID,EAAajK,OAAQkK,IACrCf,GAAcC,EAAKa,EAAaC,GAAI3Q,EAE5C,CACJ,CACA,MAAM4Q,GAAsB1C,EAAW,oBAEvC,SAASrB,GAAWgE,GAChB,MAAMC,EAAgBzC,EAAQwC,GAC9B,IAAKC,EACD,OAEJzC,EAAQH,EAAW2C,IAAcC,EACjCzC,EAAQwC,GAAa,WACjB,MAAME,EAAI5E,GAActI,UAAWgN,GACnC,OAAQE,EAAEtK,QACN,KAAK,EACDvG,KAAK0Q,IAAuB,IAAIE,EAChC,MACJ,KAAK,EACD5Q,KAAK0Q,IAAuB,IAAIE,EAAcC,EAAE,IAChD,MACJ,KAAK,EACD7Q,KAAK0Q,IAAuB,IAAIE,EAAcC,EAAE,GAAIA,EAAE,IACtD,MACJ,KAAK,EACD7Q,KAAK0Q,IAAuB,IAAIE,EAAcC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAC5D,MACJ,KAAK,EACD7Q,KAAK0Q,IAAuB,IAAIE,EAAcC,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAClE,MACJ,QACI,MAAM,IAAIvP,MAAM,sBAE5B,EAEAwL,GAAsBqB,EAAQwC,GAAYC,GAC1C,MAAME,EAAW,IAAIF,EAAc,WAAc,GACjD,IAAIhB,EACJ,IAAKA,KAAQkB,EAES,mBAAdH,GAA2C,iBAATf,GAErC,SAAUA,GACuB,mBAAnBkB,EAASlB,GAChBzB,EAAQwC,GAAW7Q,UAAU8P,GAAQ,WACjC,OAAO5P,KAAK0Q,IAAqBd,GAAMxG,MAAMpJ,KAAK0Q,IAAsB/M,UAC5E,EAGA4I,GAAqB4B,EAAQwC,GAAW7Q,UAAW8P,EAAM,CACrDpB,IAAK,SAAUpM,GACO,mBAAPA,GACPpC,KAAK0Q,IAAqBd,GAAQhD,GAAoBxK,EAAIuO,EAAY,IAAMf,GAI5E9C,GAAsB9M,KAAK0Q,IAAqBd,GAAOxN,IAGvDpC,KAAK0Q,IAAqBd,GAAQxN,CAE1C,EACAa,IAAK,WACD,OAAOjD,KAAK0Q,IAAqBd,EACrC,GAGZ,CAzBC,CAyBCA,GAEN,IAAKA,KAAQgB,EACI,cAAThB,GAAwBgB,EAActO,eAAesN,KACrDzB,EAAQwC,GAAWf,GAAQgB,EAAchB,GAGrD,CACA,SAAS5D,GAAYpF,EAAQ/F,EAAMkQ,GAC/B,IAAIC,EAAQpK,EACZ,KAAOoK,IAAUA,EAAM1O,eAAezB,IAClCmQ,EAAQ7D,GAAqB6D,IAE5BA,GAASpK,EAAO/F,KAEjBmQ,EAAQpK,GAEZ,MAAMqK,EAAejD,EAAWnN,GAChC,IAAI6F,EAAW,KACf,GAAIsK,MAAYtK,EAAWsK,EAAMC,MAAmBD,EAAM1O,eAAe2O,MACrEvK,EAAWsK,EAAMC,GAAgBD,EAAMnQ,GAInCwN,GADS2C,GAASxE,GAA+BwE,EAAOnQ,KAC9B,CAC1B,MAAMqQ,EAAgBH,EAAQrK,EAAUuK,EAAcpQ,GACtDmQ,EAAMnQ,GAAQ,WACV,OAAOqQ,EAAclR,KAAM2D,UAC/B,EACAmJ,GAAsBkE,EAAMnQ,GAAO6F,EACvC,CAEJ,OAAOA,CACX,CAEA,SAASyF,GAAewD,EAAKwB,EAAUC,GACnC,IAAIC,EAAY,KAChB,SAAShM,EAAanB,GAClB,MAAMa,EAAOb,EAAKa,KAClBA,SAAKoF,KAAKpF,EAAKuM,OAAS,WACpBpN,EAAKH,OAAOqF,MAAMpJ,KAAM2D,UAC5B,EACA0N,EAAUjI,MAAMrE,EAAK6B,OAAQ7B,EAAKoF,MAC3BjG,CACX,CACAmN,EAAYrF,GAAY2D,EAAKwB,EAAWzK,GAAa,SAAUsD,EAAMG,GACjE,MAAMoH,EAAOH,EAAYpH,EAAMG,GAC/B,OAAIoH,EAAKD,OAAS,GAAiC,mBAArBnH,EAAKoH,EAAKD,OAC7BvD,GAAiCwD,EAAK1Q,KAAMsJ,EAAKoH,EAAKD,OAAQC,EAAMlM,GAIpEqB,EAAS0C,MAAMY,EAAMG,EAEpC,EACJ,CACA,SAAS2C,GAAsB0E,EAASC,GACpCD,EAAQxD,EAAW,qBAAuByD,CAC9C,CACA,IAAIC,IAAqB,EACrBC,IAAW,EAYf,SAAStF,KACL,GAAIqF,GACA,OAAOC,GAEXD,IAAqB,EACrB,IACI,MAAME,EAAK1D,GAAe2D,UAAUC,YACR,IAAxBF,EAAGG,QAAQ,WAA8C,IAA3BH,EAAGG,QAAQ,cAA8C,IAAxBH,EAAGG,QAAQ,YAC1EJ,IAAW,EAEnB,OAEA,CACA,OAAOA,EACX,CAEAtQ,KAAKc,aAAa,mBAAoB,CAAC5C,EAAQ8B,EAAM2Q,KACjD,MAAMxF,EAAiC7B,OAAOsC,yBACxCV,EAAuB5B,OAAOuC,eAQ9B/L,EAAa6Q,EAAItG,OACjBuG,EAAyB,GACzBC,GAAkH,IAAtE3S,EAAO4B,EAAW,gDAC9D0J,EAAgB1J,EAAW,WAC3B2J,EAAa3J,EAAW,QACxBgR,EAAgB,oBACtBH,EAAIxG,iBAAoB4G,IACpB,GAAIJ,EAAInG,oBAAqB,CACzB,MAAMwG,EAAYD,GAAKA,EAAEC,UACrBA,EACAlS,QAAQO,MAAM,+BAAgC2R,aAAqB/Q,MAAQ+Q,EAAUhD,QAAUgD,EAAW,UAAWD,EAAEvQ,KAAKhB,KAAM,UAAWuR,EAAElO,MAAQkO,EAAElO,KAAKX,OAAQ,WAAY8O,EAAWA,aAAqB/Q,MAAQ+Q,EAAUC,WAAQ3S,GAG5OQ,QAAQO,MAAM0R,EAEtB,GAEJJ,EAAIvG,mBAAqB,KACrB,KAAOwG,EAAuB1L,QAAQ,CAClC,MAAMgM,EAAuBN,EAAuBO,QACpD,IACID,EAAqB1Q,KAAK6B,WAAW,KACjC,MAAI6O,EAAqBE,cACfF,EAAqBF,UAEzBE,GAEd,OACO7R,GACHgS,EAAyBhS,EAC7B,CACJ,GAEJ,MAAMiS,EAA6CxR,EAAW,oCAC9D,SAASuR,EAAyBN,GAC9BJ,EAAIxG,iBAAiB4G,GACrB,IACI,MAAMQ,EAAUvR,EAAKsR,GACE,mBAAZC,GACPA,EAAQ1I,KAAKlK,KAAMoS,EAE3B,OAEA,CACJ,CACA,SAASS,EAAWrJ,GAChB,OAAOA,GAASA,EAAM8B,IAC1B,CACA,SAASwH,EAAkBtJ,GACvB,OAAOA,CACX,CACA,SAASuJ,EAAiBV,GACtB,OAAO1Q,EAAiBqR,OAAOX,EACnC,CACA,MAAMY,EAAc9R,EAAW,SACzB+R,EAAc/R,EAAW,SACzBgS,EAAgBhS,EAAW,WAC3BiS,EAA2BjS,EAAW,sBACtCkS,EAA2BlS,EAAW,sBACtCoC,EAAS,eACT+P,EAAa,KACbC,GAAW,EACXC,GAAW,EACXC,EAAoB,EAC1B,SAASC,EAAaC,EAASvP,GAC3B,OAAQwP,IACJ,IACIC,EAAeF,EAASvP,EAAOwP,EACnC,OACOjO,GACHkO,EAAeF,GAAS,EAAOhO,EACnC,EAGR,CACA,MAAMmO,EAAO,WACT,IAAIC,GAAY,EAChB,OAAO,SAAiBC,GACpB,OAAO,WACCD,IAGJA,GAAY,EACZC,EAAgB5K,MAAM,KAAMzF,WAChC,CACJ,CACJ,EACMsQ,EAAa,+BACbC,GAA4B/S,EAAW,oBAE7C,SAAS0S,EAAeF,EAASvP,EAAOoF,GACpC,MAAM2K,EAAcL,IACpB,GAAIH,IAAYnK,EACZ,MAAM,IAAI4K,UAAUH,GAExB,GAAIN,EAAQV,KAAiBK,EAAY,CAErC,IAAIhI,EAAO,KACX,KACyB,iBAAV9B,GAAuC,mBAAVA,KACpC8B,EAAO9B,GAASA,EAAM8B,KAE9B,OACO3F,GACHwO,SAAY,KACRN,EAAeF,GAAS,EAAOhO,EAAG,EADtCwO,GAGOR,CACX,CAEA,GAAIvP,IAAUoP,GAAYhK,aAAiB7H,GACvC6H,EAAMlH,eAAe2Q,IAAgBzJ,EAAMlH,eAAe4Q,IAC1D1J,EAAMyJ,KAAiBK,EACvBe,GAAqB7K,GACrBqK,EAAeF,EAASnK,EAAMyJ,GAAczJ,EAAM0J,SAAY,GAEzD9O,IAAUoP,GAA4B,mBAATlI,EAClC,IACIA,EAAKpB,KAAKV,EAAO2K,EAAYT,EAAaC,EAASvP,IAAS+P,EAAYT,EAAaC,GAAS,IAClG,OACOhO,GACHwO,EAAY,KACRN,EAAeF,GAAS,EAAOhO,EAAG,EADtCwO,EAGJ,KAEC,CACDR,EAAQV,GAAe7O,EACvB,MAAMmH,EAAQoI,EAAQT,GAatB,GAZAS,EAAQT,GAAe1J,EACnBmK,EAAQR,KAAmBA,GAEvB/O,IAAUmP,IAGVI,EAAQV,GAAeU,EAAQN,GAC/BM,EAAQT,GAAeS,EAAQP,IAKnChP,IAAUoP,GAAYhK,aAAiBlI,MAAO,CAE9C,MAAMgT,EAAQjT,EAAKY,aAAeZ,EAAKY,YAAY8C,MAC/C1D,EAAKY,YAAY8C,KAAKoN,GACtBmC,GAEA/H,EAAqB/C,EAAO0K,GAA2B,CAAEnE,cAAc,EAAMD,YAAY,EAAOvB,UAAU,EAAM/E,MAAO8K,GAE/H,CACA,QAAShO,EAAI,EAAGA,EAAIiF,EAAMhF,QACtBgO,GAAwBZ,EAASpI,EAAMjF,KAAMiF,EAAMjF,KAAMiF,EAAMjF,KAAMiF,EAAMjF,MAE/E,GAAoB,GAAhBiF,EAAMhF,QAAenC,GAASoP,EAAU,CACxCG,EAAQV,GAAeQ,EACvB,IAAIlB,EAAuB/I,EAC3B,IAII,MAAM,IAAIlI,MAAM,0BAvKpC,SAASkT,EAAuB7E,GAC5B,OAAIA,GAAOA,EAAI1P,WAAa0K,OAAO7K,UAAUG,UACvB0P,EAAIhN,aAAegN,EAAIhN,YAAY9B,MACrB,IAAM,KAAO4T,KAAKC,UAAU/E,GAEzDA,EAAMA,EAAI1P,WAAa0K,OAAO7K,UAAUG,SAASiK,KAAKyF,EACjE,CAiKgE6E,CAAuBhL,IAC9DA,GAASA,EAAM8I,MAAQ,KAAO9I,EAAM8I,MAAQ,IACrD,OACO3M,GACH4M,EAAuB5M,CAC3B,CACIuM,IAGAK,EAAqBE,eAAgB,GAEzCF,EAAqBF,UAAY7I,EACjC+I,EAAqBoB,QAAUA,EAC/BpB,EAAqB1Q,KAAOR,EAAKS,QACjCyQ,EAAqBrO,KAAO7C,EAAKY,YACjCgQ,EAAuB3I,KAAKiJ,GAC5BP,EAAIpM,mBACR,CACJ,CACJ,CAEA,OAAO+N,CACX,CACA,MAAMgB,EAA4BxT,EAAW,2BAC7C,SAASkT,GAAqBV,GAC1B,GAAIA,EAAQV,KAAiBQ,EAAmB,CAM5C,IACI,MAAMb,EAAUvR,EAAKsT,GACjB/B,GAA8B,mBAAZA,GAClBA,EAAQ1I,KAAKlK,KAAM,CAAEqS,UAAWsB,EAAQT,GAAcS,QAASA,GAEvE,OAEA,CACAA,EAAQV,GAAeO,EACvB,QAASlN,EAAI,EAAGA,EAAI2L,EAAuB1L,OAAQD,IAC3CqN,IAAY1B,EAAuB3L,GAAGqN,SACtC1B,EAAuB2C,OAAOtO,EAAG,EAG7C,CACJ,CACA,SAASiO,GAAwBZ,EAAS9R,EAAMgT,EAAcC,EAAaC,GACvEV,GAAqBV,GACrB,MAAMqB,EAAerB,EAAQV,GACvBvM,EAAWsO,EACW,mBAAhBF,EAA8BA,EAAchC,EAC7B,mBAAfiC,EAA6BA,EACjChC,EACRlR,EAAK+D,kBAAkBrC,EAAQ,KAC3B,IACI,MAAM0R,EAAqBtB,EAAQT,GAC7BgC,IAAqBL,GAAgB1B,IAAkB0B,EAAa1B,GACtE+B,IAEAL,EAAazB,GAA4B6B,EACzCJ,EAAaxB,GAA4B2B,GAG7C,MAAMxL,EAAQ3H,EAAK+B,IAAI8C,OAAU/G,EAAWuV,GAAoBxO,IAAaqM,GAAoBrM,IAAaoM,EAC1G,GACA,CAACmC,IACLpB,EAAegB,GAAc,EAAMrL,EACvC,OACO9I,GAEHmT,EAAegB,GAAc,EAAOnU,EACxC,GACDmU,EACP,CACA,MACMjJ,EAAO,WAAc,EACrBuJ,EAAiB5V,EAAO4V,eAC9B,MAAMxT,EACF,eAAO1B,GACH,MAL6B,+CAMjC,CACA,cAAOmL,CAAQ5B,GACX,OAAOqK,EAAe,IAAI7T,KAAK,MAAOuT,EAAU/J,EACpD,CACA,aAAOwJ,CAAOtS,GACV,OAAOmT,EAAe,IAAI7T,KAAK,MAAOwT,EAAU9S,EACpD,CACA,UAAO0U,CAAIC,GACP,IAAKA,GAA6C,mBAA5BA,EAAOC,OAAOC,UAChC,OAAO9T,QAAQuR,OAAO,IAAImC,EAAe,GAAI,+BAEjD,MAAMK,EAAW,GACjB,IAAInP,EAAQ,EACZ,IACI,QAASuN,KAAKyB,EACVhP,IACAmP,EAASlM,KAAK3H,EAAiByJ,QAAQwI,GAE/C,OAEI,OAAOnS,QAAQuR,OAAO,IAAImC,EAAe,GAAI,8BACjD,CACA,GAAc,IAAV9O,EACA,OAAO5E,QAAQuR,OAAO,IAAImC,EAAe,GAAI,+BAEjD,IAAIM,GAAW,EACf,MAAMC,EAAS,GACf,OAAO,IAAI/T,EAAiB,CAACyJ,EAAS4H,KAClC,QAAS1M,EAAI,EAAGA,EAAIkP,EAASjP,OAAQD,IACjCkP,EAASlP,GAAGgF,KAAKsI,IACT6B,IAGJA,GAAW,EACXrK,EAAQwI,GAAC,EACVjO,IACC+P,EAAOpM,KAAK3D,GACZU,IACc,IAAVA,IACAoP,GAAW,EACXzC,EAAO,IAAImC,EAAeO,EAAQ,+BAA6B,EAEtE,EAGb,CAEA,WAAOC,CAAKN,GACR,IAAIjK,EACA4H,EACAW,EAAU,IAAI3T,KAAK,CAAC4V,EAAKC,KACzBzK,EAAUwK,EACV5C,EAAS6C,IAEb,SAASC,EAAUtM,GACf4B,EAAQ5B,EACZ,CACA,SAASuM,EAASrV,GACdsS,EAAOtS,EACX,CACA,QAAS8I,KAAS6L,EACTxC,EAAWrJ,KACZA,EAAQxJ,KAAKoL,QAAQ5B,IAEzBA,EAAM8B,KAAKwK,EAAWC,GAE1B,OAAOpC,CACX,CACA,UAAOqC,CAAIX,GACP,OAAO1T,EAAiBsU,gBAAgBZ,EAC5C,CACA,iBAAOa,CAAWb,GAEd,OADUrV,MAAQA,KAAKF,qBAAqB6B,EAAmB3B,KAAO2B,GAC7DsU,gBAAgBZ,EAAQ,CAC7Bc,aAAe3M,KAAa4M,OAAQ,YAAa5M,UACjD6M,cAAgB1Q,KAAWyQ,OAAQ,WAAYE,OAAQ3Q,KAE/D,CACA,sBAAOsQ,CAAgBZ,EAAQ/R,GAC3B,IAAI8H,EACA4H,EACAW,EAAU,IAAI3T,KAAK,CAAC4V,EAAKC,KACzBzK,EAAUwK,EACV5C,EAAS6C,IAGTU,EAAkB,EAClBC,EAAa,EACjB,MAAMC,EAAiB,GACvB,QAASjN,KAAS6L,EAAQ,CACjBxC,EAAWrJ,KACZA,EAAQxJ,KAAKoL,QAAQ5B,IAEzB,MAAMkN,EAAgBF,EACtB,IACIhN,EAAM8B,KAAM9B,IACRiN,EAAeC,GAAiBpT,EAAWA,EAAS6S,aAAa3M,GAASA,EAC1E+M,IACwB,IAApBA,GACAnL,EAAQqL,EAAc,EAE1B9Q,IACKrC,GAIDmT,EAAeC,GAAiBpT,EAAS+S,cAAc1Q,GACvD4Q,IACwB,IAApBA,GACAnL,EAAQqL,IANZzD,EAAOrN,EAAG,EAUtB,OACOgR,GACH3D,EAAO2D,EACX,CACAJ,IACAC,GACJ,CAEAD,UAAmB,EACK,IAApBA,GACAnL,EAAQqL,GAEL9C,CACX,CACAhR,YAAYiU,GACR,MAAMjD,EAAU3T,KAChB,KAAM2T,aAAmBhS,GACrB,MAAM,IAAIL,MAAM,kCAEpBqS,EAAQV,GAAeK,EACvBK,EAAQT,GAAe,GACvB,IACI,MAAMiB,EAAcL,IACpB8C,GACIA,EAASzC,EAAYT,EAAaC,EAASJ,IAAYY,EAAYT,EAAaC,EAASH,IACjG,OACO9S,GACHmT,EAAeF,GAAS,EAAOjT,EACnC,CACJ,CACA,IAAK4U,OAAOuB,eACR,MAAO,SACX,CACA,IAAKvB,OAAOwB,WACR,OAAOnV,CACX,CACA2J,KAAKwJ,EAAaC,GASd,IAAIgC,EAAI/W,KAAK2C,cAAc2S,OAAOwB,WAC7BC,GAAkB,mBAANA,KACbA,EAAI/W,KAAK2C,aAAehB,GAE5B,MAAMkT,EAAe,IAAIkC,EAAEnL,GACrB/J,EAAOR,EAAKS,QAClB,OAAI9B,KAAKiT,IAAgBK,EACrBtT,KAAKkT,GAAa5J,KAAKzH,EAAMgT,EAAcC,EAAaC,GAGxDR,GAAwBvU,KAAM6B,EAAMgT,EAAcC,EAAaC,GAE5DF,CACX,CACAmC,MAAMjC,GACF,OAAO/U,KAAKsL,KAAK,KAAMyJ,EAC3B,CACAkC,QAAQC,GAEJ,IAAIH,EAAI/W,KAAK2C,cAAc2S,OAAOwB,WAC7BC,GAAkB,mBAANA,KACbA,EAAIpV,GAER,MAAMkT,EAAe,IAAIkC,EAAEnL,GAC3BiJ,EAAa1B,GAAiBA,EAC9B,MAAMtR,EAAOR,EAAKS,QAClB,OAAI9B,KAAKiT,IAAgBK,EACrBtT,KAAKkT,GAAa5J,KAAKzH,EAAMgT,EAAcqC,EAAWA,GAGtD3C,GAAwBvU,KAAM6B,EAAMgT,EAAcqC,EAAWA,GAE1DrC,CACX,EAIJlT,EAAiByJ,QAAazJ,EAAiByJ,QAC/CzJ,EAAiBqR,OAAYrR,EAAiBqR,OAC9CrR,EAAiBgU,KAAUhU,EAAiBgU,KAC5ChU,EAAiBqU,IAASrU,EAAiBqU,IAC3C,MAAMmB,EAAgB5X,EAAOsL,GAAiBtL,EAAOkC,QACrDlC,EAAOkC,QAAaE,EACpB,MAAMyV,EAAoBjW,EAAW,eACrC,SAAS+K,EAAUmL,GACf,MAAMrG,EAAQqG,EAAKvX,UACb8P,EAAOpD,EAA+BwE,EAAO,QACnD,GAAIpB,KAA2B,IAAlBA,EAAKrB,WAAuBqB,EAAKG,cAG1C,OAEJ,MAAMuH,EAAetG,EAAM1F,KAE3B0F,EAAMlG,GAAcwM,EACpBD,EAAKvX,UAAUwL,KAAO,SAAUwK,EAAWC,GAIvC,OAHgB,IAAIpU,EAAiB,CAACyJ,EAAS4H,KAC3CsE,EAAapN,KAAKlK,KAAMoL,EAAS4H,EAAM,GAE5B1H,KAAKwK,EAAWC,EACnC,EACAsB,EAAKD,IAAqB,CAC9B,CAeA,OAdApF,EAAI9F,UAAYA,EAcZiL,IACAjL,EAAUiL,GACVnL,GAAYzM,EAAQ,QAASmH,GAfjC,SAAS6Q,EAAQnV,GACb,OAAO,SAAU4H,EAAMG,GACnB,IAAIqN,EAAgBpV,EAAGgH,MAAMY,EAAMG,GACnC,GAAIqN,aAAyB7V,EACzB,OAAO6V,EAEX,IAAIC,EAAOD,EAAc7U,YACzB,OAAK8U,EAAKL,IACNlL,EAAUuL,GAEPD,CACX,CACJ,CAG6CD,CAAQ7Q,KAGrDjF,QAAQJ,EAAKF,WAAW,0BAA4B8Q,EAC7CtQ,IAKXN,KAAKc,aAAa,WAAa5C,IAE3B,MAAMmY,EAA2BC,SAAS7X,UAAUG,SAC9C2X,EAA2B5J,EAAW,oBACtC6J,EAAiB7J,EAAW,WAC5B8J,EAAe9J,EAAW,SAC1B+J,EAAsB,WACxB,GAAoB,mBAAT/X,KAAqB,CAC5B,MAAMgY,EAAmBhY,KAAK4X,GAC9B,GAAII,EACA,MAAgC,mBAArBA,EACAN,EAAyBxN,KAAK8N,GAG9BrN,OAAO7K,UAAUG,SAASiK,KAAK8N,GAG9C,GAAIhY,OAASyB,QAAS,CAClB,MAAMwW,EAAgB1Y,EAAOsY,GAC7B,GAAII,EACA,OAAOP,EAAyBxN,KAAK+N,EAE7C,CACA,GAAIjY,OAASsB,MAAO,CAChB,MAAM4W,EAAc3Y,EAAOuY,GAC3B,GAAII,EACA,OAAOR,EAAyBxN,KAAKgO,EAE7C,CACJ,CACA,OAAOR,EAAyBxN,KAAKlK,KACzC,EACA+X,EAAoBH,GAA4BF,EAChDC,SAAS7X,UAAUG,SAAW8X,EAE9B,MAAMI,EAAyBxN,OAAO7K,UAAUG,SAEhD0K,OAAO7K,UAAUG,SAAW,WACxB,MAAuB,mBAAZwB,SAA0BzB,gBAAgByB,QAFxB,mBAKtB0W,EAAuBjO,KAAKlK,KACvC,IAOJ,IAAIoY,IAAmB,EACvB,UAAW9Y,OAAW,IAClB,IACI,MAAMwK,EAAUa,OAAOuC,eAAe,CAAC,EAAG,UAAW,CACjDjK,IAAK,WACDmV,IAAmB,CACvB,IAKJ9Y,OAAOgR,iBAAiB,OAAQxG,EAASA,GACzCxK,OAAO+Q,oBAAoB,OAAQvG,EAASA,EAChD,OAEIsO,IAAmB,CACvB,CAGJ,MAAMC,GAAiC,CACnCpO,MAAM,GAEJqO,GAAuB,CAAC,EACxBC,GAAgB,CAAC,EACjBC,GAAyB,IAAIC,OAAO,IAAM3K,GAAqB,uBAC/D4K,GAA+B1K,EAAW,sBAChD,SAAS2K,GAAkBxI,EAAWyI,GAClC,MAAMC,GAAkBD,EAAoBA,EAAkBzI,GAAaA,GAAatC,GAClFiL,GAAiBF,EAAoBA,EAAkBzI,GAAaA,GAAavC,GACjFlC,EAASoC,GAAqB+K,EAC9BE,EAAgBjL,GAAqBgL,EAC3CR,GAAqBnI,GAAa,CAAC,EACnCmI,GAAqBnI,GAAWtC,IAAanC,EAC7C4M,GAAqBnI,GAAWvC,IAAYmL,CAChD,CACA,SAASjN,GAAiBqC,EAAS6D,EAAKgH,EAAMC,GAC1C,MAAMC,EAAsBD,GAAgBA,EAAaE,KAAQ3L,GAC3D4L,EAAyBH,GAAgBA,EAAaI,IAAO5L,GAC7D6L,EAA4BL,GAAgBA,EAAaM,WAAc,iBACvEC,EAAuCP,GAAgBA,EAAaQ,OAAU,qBAC9EC,EAA6B1L,EAAWkL,GACxCS,EAA4B,IAAMT,EAAqB,IACvDU,EAAyB,kBACzBC,EAAgC,IAAMD,EAAyB,IAC/D1U,EAAa,SAAUhB,EAAM0C,EAAQqI,GAGvC,GAAI/K,EAAK4V,UACL,OAEJ,MAAMpT,EAAWxC,EAAKZ,SAUtB,IAAI5C,EAToB,iBAAbgG,GAAyBA,EAASqT,cAEzC7V,EAAKZ,SAAY2L,GAAUvI,EAASqT,YAAY9K,GAChD/K,EAAK8T,iBAAmBtR,GAO5B,IACIxC,EAAKH,OAAOG,EAAM0C,EAAQ,CAACqI,GAC/B,OACOtJ,GACHjF,EAAQiF,CACZ,CACA,MAAMmE,EAAU5F,EAAK4F,QAQrB,OAPIA,GAA8B,iBAAZA,GAAwBA,EAAQgK,MAKlDlN,EAAOwS,GAAuBlP,KAAKtD,EAAQqI,EAAM3K,KADhCJ,EAAK8T,iBAAmB9T,EAAK8T,iBAAmB9T,EAAKZ,SACLwG,GAE9DpJ,CACX,EACA,SAASsZ,EAAeC,EAAShL,EAAOiL,GAIpC,KADAjL,EAAQA,GAASd,EAAQc,OAErB,OAIJ,MAAMrI,EAASqT,GAAWhL,EAAMrI,QAAUuH,EACpCgM,EAAQvT,EAAO0R,GAAqBrJ,EAAM3K,MAAM4V,EAAYtM,GAAWC,KAC7E,GAAIsM,EAAO,CACP,MAAMzE,EAAS,GAGf,GAAqB,IAAjByE,EAAM5T,OAAc,CACpB,MAAMZ,EAAMT,EAAWiV,EAAM,GAAIvT,EAAQqI,GACzCtJ,GAAO+P,EAAOpM,KAAK3D,EACvB,KACK,CAID,MAAMyU,EAAYD,EAAM5M,QACxB,QAASjH,EAAI,EAAGA,EAAI8T,EAAU7T,UACtB0I,IAAiD,IAAxCA,EAAMyJ,KADepS,IAAK,CAIvC,MAAMX,EAAMT,EAAWkV,EAAU9T,GAAIM,EAAQqI,GAC7CtJ,GAAO+P,EAAOpM,KAAK3D,EACvB,CACJ,CAGA,GAAsB,IAAlB+P,EAAOnP,OACP,MAAMmP,EAAO,GAGb,QAASpP,EAAI,EAAGA,EAAIoP,EAAOnP,OAAQD,IAAK,CACpC,MAAMX,EAAM+P,EAAOpP,GACnB0L,EAAI9G,wBAAwB,KACxB,MAAMvF,GAEd,CAER,CACJ,CAEA,MAAM0U,EAA0B,SAAUpL,GACtC,OAAO+K,EAAeha,KAAMiP,GAAO,EACvC,EAEMqL,EAAiC,SAAUrL,GAC7C,OAAO+K,EAAeha,KAAMiP,GAAO,EACvC,EACA,SAASsL,EAAwB5K,EAAKsJ,GAClC,IAAKtJ,EACD,OAAO,EAEX,IAAI6K,GAAoB,EACpBvB,QAAsCtZ,IAAtBsZ,EAAahP,OAC7BuQ,EAAoBvB,EAAahP,MAErC,MAAMwQ,EAAkBxB,GAAgBA,EAAayB,GACrD,IAAItZ,GAAiB,EACjB6X,QAAwCtZ,IAAxBsZ,EAAa0B,SAC7BvZ,EAAiB6X,EAAa0B,QAElC,IAAIC,GAAe,EACf3B,QAAoCtZ,IAApBsZ,EAAa4B,KAC7BD,EAAe3B,EAAa4B,IAEhC,IAAI7J,EAAQrB,EACZ,KAAOqB,IAAUA,EAAM1O,eAAe4W,IAClClI,EAAQ7D,GAAqB6D,GASjC,IAPKA,GAASrB,EAAIuJ,KAEdlI,EAAQrB,IAEPqB,GAGDA,EAAM0I,GACN,OAAO,EAEX,MAAMd,EAAoBK,GAAgBA,EAAaL,kBAGjDkC,EAAW,CAAC,EACZC,EAAyB/J,EAAM0I,GAA8B1I,EAAMkI,GACnE8B,EAA4BhK,EAAMhD,EAAWoL,IAC/CpI,EAAMoI,GACJ6B,EAAkBjK,EAAMhD,EAAWsL,IACrCtI,EAAMsI,GACJ4B,GAA2BlK,EAAMhD,EAAWwL,IAC9CxI,EAAMwI,GACV,IAAI2B,EACAlC,GAAgBA,EAAamC,UAC7BD,EAA6BnK,EAAMhD,EAAWiL,EAAamC,UACvDpK,EAAMiI,EAAamC,UA2B3B,MAsDMvV,EAAiB2U,EAtDM,SAAUtW,GAGnC,IAAI4W,EAASO,WAGb,OAAON,EAAuB7Q,KAAK4Q,EAASlU,OAAQkU,EAAS3K,UAAW2K,EAASQ,QAAUhB,EAAiCD,EAAyBS,EAAShR,QAClK,EAsCgC,SAAU5F,GACtC,OAAO6W,EAAuB7Q,KAAK4Q,EAASlU,OAAQkU,EAAS3K,UAAWjM,EAAKH,OAAQ+W,EAAShR,QAClG,EAQM7D,EAAeuU,EA/CM,SAAUtW,GAIjC,IAAKA,EAAK4V,UAAW,CACjB,MAAMyB,EAAmBjD,GAAqBpU,EAAKiM,WACnD,IAAIqL,EACAD,IACAC,EAAkBD,EAAiBrX,EAAKoX,QAAU1N,GAAWC,KAEjE,MAAM4N,EAAgBD,GAAmBtX,EAAK0C,OAAO4U,GACrD,GAAIC,EACA,QAASnV,EAAI,EAAGA,EAAImV,EAAclV,OAAQD,IAEtC,GADqBmV,EAAcnV,KACdpC,EAAM,CACvBuX,EAAc7G,OAAOtO,EAAG,GAExBpC,EAAK4V,WAAY,EACY,IAAzB2B,EAAclV,SAGdrC,EAAKwX,YAAa,EAClBxX,EAAK0C,OAAO4U,GAAmB,MAEnC,KACJ,CAGZ,CAIA,GAAKtX,EAAKwX,WAGV,OAAOV,EAA0B9Q,KAAKhG,EAAK0C,OAAQ1C,EAAKiM,UAAWjM,EAAKoX,QAAUhB,EAAiCD,EAAyBnW,EAAK4F,QACrJ,EAO8B,SAAU5F,GACpC,OAAO8W,EAA0B9Q,KAAKhG,EAAK0C,OAAQ1C,EAAKiM,UAAWjM,EAAKH,OAAQG,EAAK4F,QACzF,EAQM6R,EAAW1C,GAAgBA,EAAa2C,KAAQ3C,EAAa2C,KAL7B,SAAU1X,EAAMwC,GAClD,MAAMmV,SAAwBnV,EAC9B,MAA2B,aAAnBmV,GAAiC3X,EAAKZ,WAAaoD,GACnC,WAAnBmV,GAA+B3X,EAAK8T,mBAAqBtR,CAClE,EAEMoV,EAAkBza,KAAK2M,EAAW,qBAClC+N,EAAgB5N,EAAQH,EAAW,mBACnCgO,EAAkB,SAAUC,EAAgBC,EAAWC,EAAkBC,EAAgBxB,GAAe,EAAOQ,GAAU,GAC3H,OAAO,WACH,MAAMxU,EAAS5G,MAAQmO,EACvB,IAAIgC,EAAYxM,UAAU,GACtBsV,GAAgBA,EAAaoD,oBAC7BlM,EAAY8I,EAAaoD,kBAAkBlM,IAE/C,IAAIzJ,EAAW/C,UAAU,GACzB,IAAK+C,EACD,OAAOuV,EAAe7S,MAAMpJ,KAAM2D,WAEtC,GAAIgL,IAAwB,sBAAdwB,EAEV,OAAO8L,EAAe7S,MAAMpJ,KAAM2D,WAKtC,IAAI2Y,GAAgB,EACpB,GAAwB,mBAAb5V,EAAyB,CAChC,IAAKA,EAASqT,YACV,OAAOkC,EAAe7S,MAAMpJ,KAAM2D,WAEtC2Y,GAAgB,CACpB,CACA,GAAI7B,IAAoBA,EAAgBwB,EAAgBvV,EAAUE,EAAQjD,WACtE,OAEJ,MAAM4Y,GAAUnE,MAAsB2D,IAAsD,IAArCA,EAAchK,QAAQ5B,GACvErG,GAlHd,SAAS0S,EAA0B1S,EAASyS,GACxC,OAAKnE,IAAuC,iBAAZtO,GAAwBA,IAI3CA,EAAQwR,QAEhBlD,IAAqBmE,EAGH,kBAAZzS,EACA,CAAEwR,QAASxR,EAASyS,SAAS,GAEnCzS,EAGkB,iBAAZA,IAA4C,IAApBA,EAAQyS,QAChC,IAAKzS,EAASyS,SAAS,GAE3BzS,EALI,CAAEyS,SAAS,GANXzS,CAYf,CA8FwB0S,CAA0B7Y,UAAU,GAAI4Y,IACxD,GAAIT,EAEA,QAASxV,GAAI,EAAGA,GAAIwV,EAAgBvV,OAAQD,KACxC,GAAI6J,IAAc2L,EAAgBxV,IAC9B,OAAIiW,GACON,EAAe/R,KAAKtD,EAAQuJ,EAAWzJ,EAAUoD,IAGjDmS,EAAe7S,MAAMpJ,KAAM2D,WAKlD,MAAM2X,KAAWxR,KAAqC,kBAAZA,IAA+BA,GAAQwR,SAC3ExH,MAAOhK,IAA8B,iBAAZA,KAAuBA,GAAQgK,KACxDjS,GAAOR,KAAKS,QAClB,IAAIyZ,GAAmBjD,GAAqBnI,GACvCoL,KACD5C,GAAkBxI,EAAWyI,GAC7B2C,GAAmBjD,GAAqBnI,IAE5C,MAAMqL,GAAkBD,GAAiBD,GAAU1N,GAAWC,IAC9D,IAiBItK,GAjBAkY,GAAgB7U,EAAO4U,IACvBH,IAAa,EACjB,GAAII,IAGA,GADAJ,IAAa,EACTja,EACA,QAASkF,GAAI,EAAGA,GAAImV,GAAclV,OAAQD,KACtC,GAAIqV,EAAQF,GAAcnV,IAAII,GAE1B,YAMZ+U,GAAgB7U,EAAO4U,IAAmB,GAG9C,MAAMiB,GAAkB7V,EAAOjE,YAAY9B,KACrC6b,GAAenE,GAAckE,IAC/BC,KACAnZ,GAASmZ,GAAavM,IAErB5M,KACDA,GAASkZ,GAAkBP,GACtBtD,EAAoBA,EAAkBzI,GAAaA,IAI5D2K,EAAShR,QAAUA,GACfgK,KAIAgH,EAAShR,QAAQgK,MAAO,GAE5BgH,EAASlU,OAASA,EAClBkU,EAASQ,QAAUA,GACnBR,EAAS3K,UAAYA,EACrB2K,EAASO,WAAaA,GACtB,MAAMtW,GAAOyV,EAAoBnC,QAAiC1Y,EAE9DoF,KACAA,GAAK+V,SAAWA,GAEpB,MAAM5W,GAAOrC,GAAKqE,kBAAkB3C,GAAQmD,EAAU3B,GAAMoX,EAAkBC,GA+B9E,OA5BAtB,EAASlU,OAAS,KAEd7B,KACAA,GAAK+V,SAAW,MAIhBhH,KACAhK,GAAQgK,MAAO,IAEZsE,IAA4C,kBAAjBlU,GAAK4F,UAGnC5F,GAAK4F,QAAUA,IAEnB5F,GAAK0C,OAASA,EACd1C,GAAKoX,QAAUA,GACfpX,GAAKiM,UAAYA,EACbmM,IAEApY,GAAK8T,iBAAmBtR,GAEvB0U,EAIDK,GAAckB,QAAQzY,IAHtBuX,GAAcnS,KAAKpF,IAKnB0W,EACOhU,OADX,CAGJ,CACJ,EACAoK,SAAMkI,GAAsB8C,EAAgBjB,EAAwBpB,EAA2B9T,EAAgBI,EAAc2U,GACzHO,IACAnK,EAAM4I,GAA0BoC,EAAgBb,EAA4BtB,EAvJlD,SAAU3V,GACpC,OAAOiX,EAA2BjR,KAAK4Q,EAASlU,OAAQkU,EAAS3K,UAAWjM,EAAKH,OAAQ+W,EAAShR,QACtG,EAqJsI7D,EAAc2U,GAAc,IAElK5J,EAAMoI,GAAyB,WAC3B,MAAMxS,EAAS5G,MAAQmO,EACvB,IAAIgC,EAAYxM,UAAU,GACtBsV,GAAgBA,EAAaoD,oBAC7BlM,EAAY8I,EAAaoD,kBAAkBlM,IAE/C,MAAMrG,EAAUnG,UAAU,GACpB2X,IAAWxR,IAAqC,kBAAZA,GAA+BA,EAAQwR,SAC3E5U,EAAW/C,UAAU,GAC3B,IAAK+C,EACD,OAAOsU,EAA0B5R,MAAMpJ,KAAM2D,WAEjD,GAAI8W,IACCA,EAAgBO,EAA2BtU,EAAUE,EAAQjD,WAC9D,OAEJ,MAAM4X,EAAmBjD,GAAqBnI,GAC9C,IAAIqL,EACAD,IACAC,EAAkBD,EAAiBD,EAAU1N,GAAWC,KAE5D,MAAM4N,EAAgBD,GAAmB5U,EAAO4U,GAChD,GAAIC,EACA,QAASnV,EAAI,EAAGA,EAAImV,EAAclV,OAAQD,IAAK,CAC3C,MAAMsW,EAAenB,EAAcnV,GACnC,GAAIqV,EAAQiB,EAAclW,GAkBtB,OAjBA+U,EAAc7G,OAAOtO,EAAG,GAExBsW,EAAa9C,WAAY,EACI,IAAzB2B,EAAclV,SAGdqW,EAAalB,YAAa,EAC1B9U,EAAO4U,GAAmB,KAID,iBAAdrL,KAEPvJ,EADyBkH,GAAqB,cAAgBqC,GACnC,MAGnCyM,EAAa/a,KAAKsE,WAAWyW,GACzBhC,EACOhU,OAEX,CAER,CAMJ,OAAOoU,EAA0B5R,MAAMpJ,KAAM2D,UACjD,EACAqN,EAAMsI,GAA4B,WAC9B,MAAM1S,EAAS5G,MAAQmO,EACvB,IAAIgC,EAAYxM,UAAU,GACtBsV,GAAgBA,EAAaoD,oBAC7BlM,EAAY8I,EAAaoD,kBAAkBlM,IAE/C,MAAMoJ,EAAY,GACZY,EAAQ0C,GAAejW,EAAQgS,EAAoBA,EAAkBzI,GAAaA,GACxF,QAAS7J,EAAI,EAAGA,EAAI6T,EAAM5T,OAAQD,IAAK,CACnC,MAAMpC,EAAOiW,EAAM7T,GAEnBiT,EAAUjQ,KADKpF,EAAK8T,iBAAmB9T,EAAK8T,iBAAmB9T,EAAKZ,SAExE,CACA,OAAOiW,CACX,EACAvI,EAAMwI,GAAuC,WACzC,MAAM5S,EAAS5G,MAAQmO,EACvB,IAAIgC,EAAYxM,UAAU,GAC1B,GAAKwM,EAiBA,CACG8I,GAAgBA,EAAaoD,oBAC7BlM,EAAY8I,EAAaoD,kBAAkBlM,IAE/C,MAAMoL,EAAmBjD,GAAqBnI,GAC9C,GAAIoL,EAAkB,CAClB,MAEMpB,EAAQvT,EAFU2U,EAAiB1N,KAGnCiP,EAAelW,EAFU2U,EAAiB3N,KAGhD,GAAIuM,EAAO,CACP,MAAM4C,EAAc5C,EAAM5M,QAC1B,QAASjH,EAAI,EAAGA,EAAIyW,EAAYxW,OAAQD,IAAK,CACzC,MAAMpC,EAAO6Y,EAAYzW,GAEzBtG,KAAKoZ,GAAuBlP,KAAKlK,KAAMmQ,EADxBjM,EAAK8T,iBAAmB9T,EAAK8T,iBAAmB9T,EAAKZ,SACRY,EAAK4F,QACrE,CACJ,CACA,GAAIgT,EAAc,CACd,MAAMC,EAAcD,EAAavP,QACjC,QAASjH,EAAI,EAAGA,EAAIyW,EAAYxW,OAAQD,IAAK,CACzC,MAAMpC,EAAO6Y,EAAYzW,GAEzBtG,KAAKoZ,GAAuBlP,KAAKlK,KAAMmQ,EADxBjM,EAAK8T,iBAAmB9T,EAAK8T,iBAAmB9T,EAAKZ,SACRY,EAAK4F,QACrE,CACJ,CACJ,CACJ,KA5CgB,CACZ,MAAMkT,EAAOrS,OAAOqS,KAAKpW,GACzB,QAASN,EAAI,EAAGA,EAAI0W,EAAKzW,OAAQD,IAAK,CAClC,MACM2W,EAAQzE,GAAuB0E,KADxBF,EAAK1W,IAElB,IAAI6W,EAAUF,GAASA,EAAM,GAKzBE,GAAuB,mBAAZA,GACXnd,KAAKwZ,GAAqCtP,KAAKlK,KAAMmd,EAE7D,CAEAnd,KAAKwZ,GAAqCtP,KAAKlK,KAAM,iBACzD,CA6BA,GAAI4a,EACA,OAAO5a,IAEf,EAEA8M,GAAsBkE,EAAMkI,GAAqB6B,GACjDjO,GAAsBkE,EAAMoI,GAAwB4B,GAChDE,IACApO,GAAsBkE,EAAMwI,GAAsC0B,IAElED,GACAnO,GAAsBkE,EAAMsI,GAA2B2B,IAEpD,CACX,CACA,IAAImC,EAAU,GACd,QAAS9W,EAAI,EAAGA,EAAI0S,EAAKzS,OAAQD,IAC7B8W,EAAQ9W,GAAKiU,EAAwBvB,EAAK1S,GAAI2S,GAElD,OAAOmE,CACX,CACA,SAASP,GAAejW,EAAQuJ,GAC5B,IAAKA,EAAW,CACZ,MAAMkN,EAAa,GACnB,QAASzN,KAAQhJ,EAAQ,CACrB,MAAMqW,EAAQzE,GAAuB0E,KAAKtN,GAC1C,IAAIuN,EAAUF,GAASA,EAAM,GAC7B,GAAIE,KAAahN,GAAagN,IAAYhN,GAAY,CAClD,MAAMgK,EAAQvT,EAAOgJ,GACrB,GAAIuK,EACA,QAAS7T,EAAI,EAAGA,EAAI6T,EAAM5T,OAAQD,IAC9B+W,EAAW/T,KAAK6Q,EAAM7T,GAGlC,CACJ,CACA,OAAO+W,CACX,CACA,IAAI7B,EAAkBlD,GAAqBnI,GACtCqL,IACD7C,GAAkBxI,GAClBqL,EAAkBlD,GAAqBnI,IAE3C,MAAMmN,EAAoB1W,EAAO4U,EAAgB3N,KAC3C0P,EAAmB3W,EAAO4U,EAAgB5N,KAChD,OAAK0P,EAIMC,EAAmBD,EAAkBE,OAAOD,GAC/CD,EAAkB/P,QAJfgQ,EAAmBA,EAAiBhQ,QAAU,EAM7D,CACA,SAASnB,GAAoB7M,EAAQyS,GACjC,MAAMyL,EAAQle,EAAOke,MACjBA,GAASA,EAAM3d,WACfkS,EAAIhG,YAAYyR,EAAM3d,UAAW,2BAA6B4G,GAAa,SAAUsD,EAAMG,GACvFH,EAAK0O,KAAgC,EAIrChS,GAAYA,EAAS0C,MAAMY,EAAMG,EACrC,EAER,CAEA,SAAS6C,GAAegF,EAAKpL,EAAQ8W,EAAYC,EAAQC,GACrD,MAAMlS,EAASrK,KAAKF,WAAWwc,GAC/B,GAAI/W,EAAO8E,GACP,OAEJ,MAAMmS,EAAiBjX,EAAO8E,GAAU9E,EAAO+W,GAC/C/W,EAAO+W,GAAU,SAAU9c,EAAMid,EAAMhU,GACnC,OAAIgU,GAAQA,EAAKhe,WACb8d,EAAUG,QAAQ,SAAUza,GACxB,MAAMC,EAAU,GAAEma,KAAcC,MAAara,EACvCxD,EAAYge,EAAKhe,UASvB,IACI,GAAIA,EAAUwC,eAAegB,GAAW,CACpC,MAAM0a,EAAahM,EAAIxF,+BAA+B1M,EAAWwD,GAC7D0a,GAAcA,EAAWxU,OACzBwU,EAAWxU,MAAQwI,EAAIpF,oBAAoBoR,EAAWxU,MAAOjG,GAC7DyO,EAAIjF,kBAAkB+Q,EAAKhe,UAAWwD,EAAU0a,IAE3Cle,EAAUwD,KACfxD,EAAUwD,GAAY0O,EAAIpF,oBAAoB9M,EAAUwD,GAAWC,GAE3E,MACSzD,EAAUwD,KACfxD,EAAUwD,GAAY0O,EAAIpF,oBAAoB9M,EAAUwD,GAAWC,GAE3E,OAGI,CAER,GAEGsa,EAAe3T,KAAKtD,EAAQ/F,EAAMid,EAAMhU,EACnD,EACAkI,EAAIlF,sBAAsBlG,EAAO+W,GAASE,EAC9C,CAMA,SAAShR,GAAiBjG,EAAQ4J,EAAcyN,GAC5C,IAAKA,GAAgD,IAA5BA,EAAiB1X,OACtC,OAAOiK,EAEX,MAAM0N,EAAMD,EAAiBE,OAAOC,GAAMA,EAAGxX,SAAWA,GACxD,IAAKsX,GAAsB,IAAfA,EAAI3X,OACZ,OAAOiK,EAEX,MAAM6N,EAAyBH,EAAI,GAAGD,iBACtC,OAAOzN,EAAa2N,OAAOG,IAA6C,IAAvCD,EAAuBtM,QAAQuM,GACpE,CACA,SAASC,GAAwB3X,EAAQ4J,EAAcyN,EAAkBne,GAGhE8G,GAILmF,GAAkBnF,EADSiG,GAAiBjG,EAAQ4J,EAAcyN,GACpBne,EAClD,CAKA,SAAS0e,GAAgB5X,GACrB,OAAO+D,OAAO8T,oBAAoB7X,GAC7BuX,OAAOtd,GAAQA,EAAK6d,WAAW,OAAS7d,EAAK0F,OAAS,GACtDoY,IAAI9d,GAAQA,EAAK+d,UAAU,GACpC,CAkCAvd,KAAKc,aAAa,OAAQ,CAAC5C,EAAQ8B,EAAM2Q,KAGrC,MAAM6M,EAAaL,GAAgBjf,GACnCyS,EAAIjG,kBAAoBA,GACxBiG,EAAIhG,YAAcA,GAClBgG,EAAI/F,cAAgBA,GACpB+F,EAAI7F,eAAiBA,GAOrB,MAAM2S,EAA6Bzd,EAAKF,WAAW,uBAC7C4d,EAA0B1d,EAAKF,WAAW,oBAC5C5B,EAAOwf,KACPxf,EAAOuf,GAA8Bvf,EAAOwf,IAE5Cxf,EAAOuf,KACPzd,EAAKyd,GAA8Bzd,EAAK0d,GACpCxf,EAAOuf,IAEf9M,EAAI5F,oBAAsBA,GAC1B4F,EAAIlG,iBAAmBA,GACvBkG,EAAI3F,WAAaA,GACjB2F,EAAIzF,qBAAuBA,GAC3ByF,EAAIxF,+BAAiCA,GACrCwF,EAAIvF,aAAeA,GACnBuF,EAAItF,WAAaA,GACjBsF,EAAIrF,WAAaA,GACjBqF,EAAIpF,oBAAsBA,GAC1BoF,EAAInF,iBAAmBA,GACvBmF,EAAIlF,sBAAwBA,GAC5BkF,EAAIjF,kBAAoBpC,OAAOuC,eAC/B8E,EAAIhF,eAAiBA,GACrBgF,EAAI1F,iBAAmB,MACnBiM,iBACAD,wBACAuG,aACAjQ,aACAE,SACAH,UACAf,YACAC,aACAC,sBACAN,0BACAC,8BACJ,GAmBJ,MAAMuR,GAAahR,EAAW,YAC9B,SAASiR,GAAW3f,EAAQ4f,EAASC,EAAYC,GAC7C,IAAI/N,EAAY,KACZgO,EAAc,KAElBF,GAAcC,EACd,MAAME,EAAkB,CAAC,EACzB,SAASja,EAAanB,GAClB,MAAMa,EAAOb,EAAKa,KAClBA,SAAKoF,KAAK,GAAK,WACX,OAAOjG,EAAKH,OAAOqF,MAAMpJ,KAAM2D,UACnC,EACAoB,EAAK2F,SAAW2G,EAAUjI,MAAM9J,EAAQyF,EAAKoF,MACtCjG,CACX,CACA,SAASqb,EAAUrb,GACf,OAAOmb,EAAYnV,KAAK5K,EAAQ4E,EAAKa,KAAK2F,SAC9C,CACA2G,EACIrF,GAAY1M,EAfhB4f,GAAWE,EAeuB1Y,GAAa,SAAUsD,EAAMG,GACvD,GAAuB,mBAAZA,EAAK,GAAmB,CAC/B,MAAML,EAAU,CACZ9E,WAA2B,aAAfoa,EACZI,MAAuB,YAAfJ,GAA2C,aAAfA,EAA6BjV,EAAK,IAAM,OACxExK,EACJwK,KAAMA,GAEJ7G,EAAW6G,EAAK,GACtBA,EAAK,GAAK,WACN,IACI,OAAO7G,EAAS8F,MAAMpJ,KAAM2D,UAChC,SASUmG,EAAQ9E,aACsB,iBAArB8E,EAAQY,gBAGR4U,EAAgBxV,EAAQY,UAE1BZ,EAAQY,WAGbZ,EAAQY,SAASsU,IAAc,MAG3C,CACJ,EACA,MAAM9a,EAAO6J,GAAiCmR,EAAS/U,EAAK,GAAIL,EAASzE,EAAcka,GACvF,IAAKrb,EACD,OAAOA,EAGX,MAAMub,EAASvb,EAAKa,KAAK2F,SAkBzB,MAjBsB,iBAAX+U,EAGPH,EAAgBG,GAAUvb,EAErBub,IAGLA,EAAOT,IAAc9a,GAIrBub,GAAUA,EAAOC,KAAOD,EAAOE,OAA+B,mBAAfF,EAAOC,KAC9B,mBAAjBD,EAAOE,QACdzb,EAAKwb,IAAMD,EAAOC,IAAIE,KAAKH,GAC3Bvb,EAAKyb,MAAQF,EAAOE,MAAMC,KAAKH,IAEb,iBAAXA,GAAuBA,EACvBA,EAEJvb,CACX,CAGI,OAAOwC,EAAS0C,MAAM9J,EAAQ6K,EAEtC,GACJkV,EACIrT,GAAY1M,EAAQ6f,EAAazY,GAAa,SAAUsD,EAAMG,GAC1D,MAAM0V,EAAK1V,EAAK,GAChB,IAAIjG,EACc,iBAAP2b,EAEP3b,EAAOob,EAAgBO,IAIvB3b,EAAO2b,GAAMA,EAAGb,IAEX9a,IACDA,EAAO2b,IAGX3b,GAA6B,iBAAdA,EAAKI,KACD,iBAAfJ,EAAKE,QACJF,EAAKe,UAAYf,EAAKa,KAAKC,YAAgC,IAAlBd,EAAKW,YAC7B,iBAAPgb,SACAP,EAAgBO,GAElBA,IACLA,EAAGb,IAAc,MAGrB9a,EAAKrC,KAAKsE,WAAWjC,IAKzBwC,EAAS0C,MAAM9J,EAAQ6K,EAE/B,EACR,CA2CA9I,KAAKc,aAAa,SAAW5C,IACzB,MAAMugB,EAAcvgB,EAAO8B,KAAKF,WAAW,gBACvC2e,GACAA,GAAY,GAGpBze,KAAKc,aAAa,SAAW5C,IACzB,MAAMiP,EAAM,MACNuR,EAAQ,QACdd,GAAW1f,EAAQiP,EAAKuR,EAAO,WAC/Bd,GAAW1f,EAAQiP,EAAKuR,EAAO,YAC/Bd,GAAW1f,EAAQiP,EAAKuR,EAAO,YAAW,GAE9C1e,KAAKc,aAAa,wBAA0B5C,IACxC0f,GAAW1f,EAAQ,UAAW,SAAU,kBACxC0f,GAAW1f,EAAQ,aAAc,YAAa,kBAC9C0f,GAAW1f,EAAQ,gBAAiB,eAAgB,iBAAgB,GAExE8B,KAAKc,aAAa,WAAY,CAAC5C,EAAQ8B,KACnC,MAAM2e,EAAkB,CAAC,QAAS,SAAU,WAC5C,QAAS1Z,EAAI,EAAGA,EAAI0Z,EAAgBzZ,OAAQD,IAExC0F,GAAYzM,EADCygB,EAAgB1Z,GACH,CAACI,EAAUgF,EAAQ7K,IAClC,SAAUof,EAAG9V,GAChB,OAAO9I,EAAKS,QAAQ8B,IAAI8C,EAAUnH,EAAQ4K,EAAMtJ,EACpD,EAER,GAEJQ,KAAKc,aAAa,cAAe,CAAC5C,EAAQ8B,EAAM2Q,MArChD,SAASkO,GAAW3gB,EAAQyS,GACxBA,EAAI5F,oBAAoB7M,EAAQyS,EACpC,EAoCIkO,CAAW3gB,EAAQyS,GA9DvB,SAASmO,GAAiBhS,EAAS6D,GAC/B,GAAI3Q,KAAK2Q,EAAItG,OAAO,qBAEhB,OAEJ,MAAQmT,aAAYvG,uBAAsB1K,WAAUC,YAAWC,sBAAuBkE,EAAI1F,mBAE1F,QAAShG,EAAI,EAAGA,EAAIuY,EAAWtY,OAAQD,IAAK,CACxC,MAAM6J,EAAY0O,EAAWvY,GAGvBoF,EAASoC,GAFQqC,EAAYtC,GAG7BkL,EAAgBjL,GAFAqC,EAAYvC,GAGlC0K,EAAqBnI,GAAa,CAAC,EACnCmI,EAAqBnI,GAAWtC,GAAanC,EAC7C4M,EAAqBnI,GAAWvC,GAAYmL,CAChD,CACA,MAAMqH,EAAejS,EAAQkS,YACxBD,GAAiBA,EAAatgB,WAGnCkS,EAAIlG,iBAAiBqC,EAAS6D,EAAK,CAACoO,GAAgBA,EAAatgB,WAErE,CAwCIqgB,CAAiB5gB,EAAQyS,GAEzB,MAAMsO,EAA4B/gB,EAAO+gB,0BACrCA,GAA6BA,EAA0BxgB,WACvDkS,EAAIlG,iBAAiBvM,EAAQyS,EAAK,CAACsO,EAA0BxgB,WAAU,GAG/EuB,KAAKc,aAAa,mBAAoB,CAAC5C,EAAQ8B,EAAM2Q,KACjDrF,GAAW,oBACXA,GAAW,yBAAwB,GAEvCtL,KAAKc,aAAa,uBAAwB,CAAC5C,EAAQ8B,EAAM2Q,KACrDrF,GAAW,uBAAsB,GAErCtL,KAAKc,aAAa,aAAc,CAAC5C,EAAQ8B,EAAM2Q,KAC3CrF,GAAW,aAAY,GAE3BtL,KAAKc,aAAa,cAAe,CAAC5C,EAAQ8B,EAAM2Q,MAxThD,SAASuO,GAAwBvO,EAAK7D,GAIlC,GAHIQ,KAAWG,IAGXzN,KAAK2Q,EAAItG,OAAO,gBAEhB,OAEJ,MAAMuS,EAAmB9P,EAAQqS,4BAEjC,IAAIC,EAAe,GACnB,GAAI7R,GAAW,CACX,MAAMV,EAAiB5O,OACvBmhB,EAAeA,EAAajD,OAAO,CAC/B,WAAY,aAAc,UAAW,cAAe,kBAAmB,mBACvE,sBAAuB,mBAAoB,oBAAqB,qBAAsB,WAE1F,MAAMkD,EA1uCd,SAASC,KACL,IACI,MAAM/O,EAAK1D,GAAe2D,UAAUC,UACpC,IAA4B,IAAxBF,EAAGG,QAAQ,WAA8C,IAA3BH,EAAGG,QAAQ,YACzC,OAAO,CAEf,OAEA,CACA,OAAO,CACX,CAguCsC4O,GAAS,CAAC,CAAE/Z,OAAQsH,EAAgB+P,iBAAkB,CAAC,WAAc,GAGnGM,GAAwBrQ,EAAgBsQ,GAAgBtQ,GAAiB+P,GAAmBA,EAAiBT,OAAOkD,GAA2CvT,GAAqBe,GACxL,CACAuS,EAAeA,EAAajD,OAAO,CAC/B,iBAAkB,4BAA6B,WAAY,aAAc,mBACzE,cAAe,iBAAkB,YAAa,cAElD,QAASlX,EAAI,EAAGA,EAAIma,EAAala,OAAQD,IAAK,CAC1C,MAAMM,EAASuH,EAAQsS,EAAana,IACpCM,GAAUA,EAAO9G,WACbye,GAAwB3X,EAAO9G,UAAW0e,GAAgB5X,EAAO9G,WAAYme,EACrF,CACJ,CA0RIsC,CAAwBvO,EAAKzS,EAAM,GAEvC8B,KAAKc,aAAa,iBAAkB,CAAC5C,EAAQ8B,EAAM2Q,MA5FnD,SAAS4O,GAAoBzS,EAAS6D,GAClC,MAAQpD,YAAWE,SAAUkD,EAAI1F,oBAC3BsC,GAAcE,IAAWX,EAAQ0S,gBAAuB,mBAAoB1S,GAIlF6D,EAAIhF,eAAegF,EAAK7D,EAAQ0S,eAAgB,iBAAkB,SADhD,CAAC,oBAAqB,uBAAwB,kBAAmB,4BAEvF,CAsFID,CAAoBrhB,EAAQyS,EAAG,GAEnC3Q,KAAKc,aAAa,MAAO,CAAC5C,EAAQ8B,MAS9B,SAASyf,EAASxhB,GACd,MAAMyhB,EAAiBzhB,EAAOyhB,eAC9B,IAAKA,EAED,OAEJ,MAAMC,EAA0BD,EAAejhB,UAI/C,IAAImhB,EAAiBD,EAAwBtT,IACzCwT,EAAoBF,EAAwBrT,IAChD,IAAKsT,EAAgB,CACjB,MAAMX,EAA4BhhB,EAAOghB,0BACzC,GAAIA,EAA2B,CAC3B,MAAMa,EAAqCb,EAA0BxgB,UACrEmhB,EAAiBE,EAAmCzT,IACpDwT,EAAoBC,EAAmCxT,GAC3D,CACJ,CACA,MAAMyT,EAAqB,mBACrBC,EAAY,YAClB,SAAShc,EAAanB,GAClB,MAAMa,EAAOb,EAAKa,KACZ6B,EAAS7B,EAAK6B,OACpBA,EAAO0a,IAAiB,EACxB1a,EAAO2a,IAA8B,EAErC,MAAMpS,EAAWvI,EAAO4a,GACnBP,IACDA,EAAiBra,EAAO8G,IACxBwT,EAAoBta,EAAO+G,KAE3BwB,GACA+R,EAAkBhX,KAAKtD,EAAQwa,EAAoBjS,GAEvD,MAAMsS,GAAc7a,EAAO4a,GAAgB,KACvC,GAAI5a,EAAO8a,aAAe9a,EAAO+a,KAG7B,IAAK5c,EAAK6c,SAAWhb,EAAO0a,IAAkBpd,EAAKE,QAAUid,EAAW,CAQpE,MAAMQ,EAAYjb,EAAOvF,EAAKF,WAAW,cACzC,GAAsB,IAAlByF,EAAOwP,QAAgByL,GAAaA,EAAUtb,OAAS,EAAG,CAC1D,MAAMub,GAAY5d,EAAKH,OACvBG,EAAKH,OAAS,WAGV,MAAM8d,GAAYjb,EAAOvF,EAAKF,WAAW,cACzC,QAASmF,EAAI,EAAGA,EAAIub,GAAUtb,OAAQD,IAC9Bub,GAAUvb,KAAOpC,GACjB2d,GAAUjN,OAAOtO,EAAG,IAGvBvB,EAAK6c,SAAW1d,EAAKE,QAAUid,GAChCS,GAAU5X,KAAKhG,EAEvB,EACA2d,EAAUvY,KAAKpF,EACnB,MAEIA,EAAKH,QAEb,MACUgB,EAAK6c,UAAqC,IAA1Bhb,EAAO0a,KAE7B1a,EAAO2a,IAA8B,IAIjDN,SAAe/W,KAAKtD,EAAQwa,EAAoBK,IAC7B7a,EAAOmb,KAEtBnb,EAAOmb,GAAY7d,GAEvB8d,EAAW5Y,MAAMxC,EAAQ7B,EAAKoF,MAC9BvD,EAAO0a,IAAiB,EACjBpd,CACX,CACA,SAAS+d,IAAwB,CACjC,SAAS1C,EAAUrb,GACf,MAAMa,EAAOb,EAAKa,KAGlBA,SAAK6c,SAAU,EACRM,EAAY9Y,MAAMrE,EAAK6B,OAAQ7B,EAAKoF,KAC/C,CACA,MAAMgY,EAAanW,GAAYgV,EAAyB,OAAQ,IAAM,SAAUhX,EAAMG,GAClFH,SAAKoY,GAAuB,GAAXjY,EAAK,GACtBH,EAAKqY,GAAWlY,EAAK,GACdgY,EAAW/Y,MAAMY,EAAMG,EAClC,GAEMmY,EAAoBtU,EAAW,qBAC/BuU,EAAsBvU,EAAW,uBACjCgU,EAAahW,GAAYgV,EAAyB,OAAQ,IAAM,SAAUhX,EAAMG,GAOlF,IAN0C,IAAtC9I,EAAKS,QAAQygB,IAMbvY,EAAKoY,GAEL,OAAOJ,EAAW5Y,MAAMY,EAAMG,GAE7B,CACD,MAAML,EAAU,CAAElD,OAAQoD,EAAMwY,IAAKxY,EAAKqY,GAAUrd,YAAY,EAAOmF,KAAMA,EAAMyX,SAAS,GACtF1d,EAAO6J,GAhBS,sBAgB+CkU,EAAqBnY,EAASzE,EAAcka,GAC7GvV,IAA6C,IAArCA,EAAKuX,KAAyCzX,EAAQ8X,SAC9D1d,EAAKE,QAAUid,GAIfnd,EAAKH,QAEb,CACJ,GACMme,EAAclW,GAAYgV,EAAyB,QAAS,IAAM,SAAUhX,EAAMG,GACpF,MAAMjG,EAtHV,SAASue,EAAgB7b,GACrB,OAAOA,EAAOmb,EAClB,CAoHiBU,CAAgBzY,GAC7B,GAAI9F,GAA4B,iBAAbA,EAAKI,KAAkB,CAKtC,GAAqB,MAAjBJ,EAAKe,UAAqBf,EAAKa,MAAQb,EAAKa,KAAK6c,QACjD,OAEJ1d,EAAKrC,KAAKsE,WAAWjC,EACzB,UAC6C,IAApC7C,EAAKS,QAAQwgB,GAElB,OAAOJ,EAAY9Y,MAAMY,EAAMG,EAKvC,EACJ,CAvJA2W,CAASvhB,GACT,MAAMwiB,EAAW/T,EAAW,WACtBoU,EAAWpU,EAAW,WACtBwT,EAAexT,EAAW,eAC1BsT,EAAgBtT,EAAW,gBAC3BqU,EAAUrU,EAAW,UACrBuT,EAA6BvT,EAAW,0BAiJ9C,GAEJ3M,KAAKc,aAAa,cAAgB5C,IAE1BA,EAAOsS,WAAgBtS,EAAOsS,UAAa6Q,aAz+DnD,SAASC,GAAe7iB,EAAW8iB,GAC/B,MAAMrf,EAASzD,EAAU6C,YAAY9B,KACrC,QAASyF,EAAI,EAAGA,EAAIsc,EAAQrc,OAAQD,IAAK,CACrC,MAAMzF,EAAO+hB,EAAQtc,GACfI,EAAW5G,EAAUe,GAC3B,GAAI6F,EAAU,CAEV,IAAK2H,GADiB7B,GAA+B1M,EAAWe,IAE5D,SAEJf,EAAUe,GAAI,CAAM6F,IAChB,MAAM8K,EAAU,WACZ,OAAO9K,EAAS0C,MAAMpJ,KAAMiM,GAActI,UAAWJ,EAAS,IAAM1C,GACxE,EACAiM,UAAsB0E,EAAS9K,GACxB8K,CACX,EANc,CAMX9K,EACP,CACJ,CACJ,CAu9DQic,CAAepjB,EAAOsS,UAAa6Q,YAAa,CAAC,qBAAsB,iBAAgB,GAG/FrhB,KAAKc,aAAa,wBAAyB,CAAC5C,EAAQ8B,KAEhD,SAASwhB,EAA4B1F,GACjC,OAAO,SAAU/K,GACMyK,GAAetd,EAAQ4d,GAC/BY,QAAQxZ,IAGf,MAAMue,EAAwBvjB,EAAOujB,sBACrC,GAAIA,EAAuB,CACvB,MAAMC,EAAM,IAAID,EAAsB3F,EAAS,CAAExJ,QAASvB,EAAEuB,QAAS2C,OAAQlE,EAAEC,YAC/E9N,EAAUR,OAAOgf,EACrB,GAER,CACJ,CACIxjB,EAAOujB,wBACPzhB,EAAK2M,EAAW,qCACZ6U,EAA4B,sBAChCxhB,EAAK2M,EAAW,4BACZ6U,EAA4B,oBAAkB,GAG1DxhB,KAAKc,aAAa,iBAAkB,CAAC5C,EAAQ8B,EAAM2Q,MA9ZnD,SAASgR,GAAoBzjB,EAAQyS,GACjCA,EAAIhG,YAAYzM,EAAQ,iBAAmBmH,GAChC,SAAUsD,EAAMG,GACnB9I,KAAKS,QAAQ8D,kBAAkB,iBAAkBuE,EAAK,GAC1D,EAER,CAyZI6Y,CAAoBzjB,EAAQyS,EAAG","names":["savedConsole","window","global","process","env","DEBUG","undefined","version","BigInt","prototype","toJSON","this","toString","GlobalDebug","console","debugOn","suppressAll","suppress","log","info","warn","error","performance","mark","name","performanceMeasure","label","measure","symbolPrefix","__Zone_symbol_prefix","__symbol__","checkDuplicate","Zone","Error","static","assertZonePatched","Promise","patches","ZoneAwarePromise","root","zone","current","parent","_currentZoneFrame","currentTask","_currentTask","__load_patch","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","_parent","_name","constructor","zoneSpec","_properties","properties","_zoneDelegate","_ZoneDelegate","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","handleId","Object","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","nativeScheduleMicroTask","func","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","isPropertyWritable","propertyDesc","writable","set","isWebWorker","WorkerGlobalScope","isNode","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","e","rejection","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","once","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","readableObjectToString","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","AggregateError","any","values","Symbol","iterator","promises","finished","errors","race","res","rej","onResolve","onReject","all","allWithCallback","allSettled","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","C","catch","finally","onFinally","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalCallback","context","isCapture","tasks","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","isExisting","capture","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","buildEventListenerOptions","constructorName","targetSource","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchCustomElements","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","findPendingTask","geolocation","patchPrototype","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt","patchQueueMicrotask"],"sourceRoot":"webpack:///","sources":["./src/polyfills.ts","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js'; // Included with Angular CLI.\n\n//SDK zum laufen bringen:\n\n// 0. file so anpassen wie hier: node_modules/pbkdf2/lib/default-encoding.js\n\n// 1. nächster error, stichwort bei google: \"aws-sdk requires global to exist\"\n(window as any).global = window;\n\n// 2. Uncaught ReferenceError: process is not defined at Object../node_modules/pbkdf2/lib/default-encoding.js (default-encoding.js:3)\n(window as any).process = {\n  env: { DEBUG: undefined },\n  version: '12.1337',\n};\n\n//4. json.stringify can't parse bigint\n(BigInt.prototype as any).toJSON = function () {\n  return this.toString();\n};\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n(window as any).process = {\n  env: { DEBUG: undefined },\n  version: '12.1337',\n};\n\n(window as any).GlobalDebug = (function () {\n  var savedConsole = console;\n  return function (debugOn, suppressAll) {\n    var suppress = suppressAll || false;\n    if (debugOn === false) {\n      (console as any) = {};\n      console.log = function () {};\n      if (suppress) {\n        console.info = function () {};\n        console.warn = function () {};\n        console.error = function () {};\n      } else {\n        console.info = savedConsole.info;\n        console.warn = savedConsole.warn;\n        console.error = savedConsole.error;\n      }\n    } else {\n      console = savedConsole;\n    }\n  };\n  //@ts-ignore\n})();\n//@ts-ignore\n\nwindow.GlobalDebug(false, false);\n","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    patchQueueMicrotask(global, api);\n});\n"],"x_google_ignoreList":[1]}